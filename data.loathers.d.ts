/* eslint-disable */
/* prettier-ignore */

export type introspection_types = {
    'Boolean': unknown;
    'BooleanFilter': { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; isOneOf: false; inputFields: [{ name: 'isNull'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'equalTo'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'notEqualTo'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; }; defaultValue: null }, { name: 'notIn'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; }; defaultValue: null }, { name: 'lessThan'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'lessThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'greaterThan'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'greaterThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'Class': { kind: 'OBJECT'; name: 'Class'; fields: { 'enumName': { name: 'enumName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'liverCapacity': { name: 'liverCapacity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'nodeId': { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'path': { name: 'path'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'pathByPath': { name: 'pathByPath'; type: { kind: 'OBJECT'; name: 'Path'; ofType: null; } }; 'primeStatIndex': { name: 'primeStatIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'spleenCapacity': { name: 'spleenCapacity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'stomachCapacity': { name: 'stomachCapacity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'stun': { name: 'stun'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ClassCondition': { kind: 'INPUT_OBJECT'; name: 'ClassCondition'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'enumName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'primeStatIndex'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'path'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'stun'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'stomachCapacity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'liverCapacity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'spleenCapacity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'ClassFilter': { kind: 'INPUT_OBJECT'; name: 'ClassFilter'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'enumName'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'primeStatIndex'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'path'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'stun'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'stomachCapacity'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'liverCapacity'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'spleenCapacity'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'pathByPath'; type: { kind: 'INPUT_OBJECT'; name: 'PathFilter'; ofType: null; }; defaultValue: null }, { name: 'pathByPathExists'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ClassFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ClassFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'ClassFilter'; ofType: null; }; defaultValue: null }]; };
    'ClassInput': { kind: 'INPUT_OBJECT'; name: 'ClassInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'enumName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'primeStatIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'path'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'stun'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'stomachCapacity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'liverCapacity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'spleenCapacity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'ClassPatch': { kind: 'INPUT_OBJECT'; name: 'ClassPatch'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'enumName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'primeStatIndex'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'path'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'stun'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'stomachCapacity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'liverCapacity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'spleenCapacity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'ClassesConnection': { kind: 'OBJECT'; name: 'ClassesConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ClassesEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Class'; ofType: null; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'ClassesEdge': { kind: 'OBJECT'; name: 'ClassesEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Class'; ofType: null; } }; }; };
    'ClassesOrderBy': { name: 'ClassesOrderBy'; enumValues: 'NATURAL' | 'ID_ASC' | 'ID_DESC' | 'NAME_ASC' | 'NAME_DESC' | 'ENUM_NAME_ASC' | 'ENUM_NAME_DESC' | 'IMAGE_ASC' | 'IMAGE_DESC' | 'PRIME_STAT_INDEX_ASC' | 'PRIME_STAT_INDEX_DESC' | 'PATH_ASC' | 'PATH_DESC' | 'STUN_ASC' | 'STUN_DESC' | 'STOMACH_CAPACITY_ASC' | 'STOMACH_CAPACITY_DESC' | 'LIVER_CAPACITY_ASC' | 'LIVER_CAPACITY_DESC' | 'SPLEEN_CAPACITY_ASC' | 'SPLEEN_CAPACITY_DESC' | 'PRIMARY_KEY_ASC' | 'PRIMARY_KEY_DESC'; };
    'CreateClassInput': { kind: 'INPUT_OBJECT'; name: 'CreateClassInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'class'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ClassInput'; ofType: null; }; }; defaultValue: null }]; };
    'CreateClassPayload': { kind: 'OBJECT'; name: 'CreateClassPayload'; fields: { 'class': { name: 'class'; type: { kind: 'OBJECT'; name: 'Class'; ofType: null; } }; 'classEdge': { name: 'classEdge'; type: { kind: 'OBJECT'; name: 'ClassesEdge'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'pathByPath': { name: 'pathByPath'; type: { kind: 'OBJECT'; name: 'Path'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'CreateEffectInput': { kind: 'INPUT_OBJECT'; name: 'CreateEffectInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'effect'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'EffectInput'; ofType: null; }; }; defaultValue: null }]; };
    'CreateEffectPayload': { kind: 'OBJECT'; name: 'CreateEffectPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'effect': { name: 'effect'; type: { kind: 'OBJECT'; name: 'Effect'; ofType: null; } }; 'effectEdge': { name: 'effectEdge'; type: { kind: 'OBJECT'; name: 'EffectsEdge'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'CreateEquipmentInput': { kind: 'INPUT_OBJECT'; name: 'CreateEquipmentInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'equipment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'EquipmentInput'; ofType: null; }; }; defaultValue: null }]; };
    'CreateEquipmentPayload': { kind: 'OBJECT'; name: 'CreateEquipmentPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'equipment': { name: 'equipment'; type: { kind: 'OBJECT'; name: 'Equipment'; ofType: null; } }; 'equipmentEdge': { name: 'equipmentEdge'; type: { kind: 'OBJECT'; name: 'EquipmentEdge'; ofType: null; } }; 'itemByItem': { name: 'itemByItem'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'CreateFamiliarInput': { kind: 'INPUT_OBJECT'; name: 'CreateFamiliarInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'familiar'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'FamiliarInput'; ofType: null; }; }; defaultValue: null }]; };
    'CreateFamiliarPayload': { kind: 'OBJECT'; name: 'CreateFamiliarPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'familiar': { name: 'familiar'; type: { kind: 'OBJECT'; name: 'Familiar'; ofType: null; } }; 'familiarEdge': { name: 'familiarEdge'; type: { kind: 'OBJECT'; name: 'FamiliarsEdge'; ofType: null; } }; 'itemByEquipment': { name: 'itemByEquipment'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; 'itemByLarva': { name: 'itemByLarva'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'CreateFoldGroupInput': { kind: 'INPUT_OBJECT'; name: 'CreateFoldGroupInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'foldGroup'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'FoldGroupInput'; ofType: null; }; }; defaultValue: null }]; };
    'CreateFoldGroupPayload': { kind: 'OBJECT'; name: 'CreateFoldGroupPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'foldGroup': { name: 'foldGroup'; type: { kind: 'OBJECT'; name: 'FoldGroup'; ofType: null; } }; 'foldGroupEdge': { name: 'foldGroupEdge'; type: { kind: 'OBJECT'; name: 'FoldGroupsEdge'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'CreateFoldableInput': { kind: 'INPUT_OBJECT'; name: 'CreateFoldableInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'foldable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'FoldableInput'; ofType: null; }; }; defaultValue: null }]; };
    'CreateFoldablePayload': { kind: 'OBJECT'; name: 'CreateFoldablePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'foldGroupByFoldGroup': { name: 'foldGroupByFoldGroup'; type: { kind: 'OBJECT'; name: 'FoldGroup'; ofType: null; } }; 'foldable': { name: 'foldable'; type: { kind: 'OBJECT'; name: 'Foldable'; ofType: null; } }; 'foldableEdge': { name: 'foldableEdge'; type: { kind: 'OBJECT'; name: 'FoldablesEdge'; ofType: null; } }; 'itemByItem': { name: 'itemByItem'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'CreateItemInput': { kind: 'INPUT_OBJECT'; name: 'CreateItemInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'item'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ItemInput'; ofType: null; }; }; defaultValue: null }]; };
    'CreateItemPayload': { kind: 'OBJECT'; name: 'CreateItemPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'item': { name: 'item'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; 'itemEdge': { name: 'itemEdge'; type: { kind: 'OBJECT'; name: 'ItemsEdge'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'CreateLocationInput': { kind: 'INPUT_OBJECT'; name: 'CreateLocationInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'location'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'LocationInput'; ofType: null; }; }; defaultValue: null }]; };
    'CreateLocationPayload': { kind: 'OBJECT'; name: 'CreateLocationPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'location': { name: 'location'; type: { kind: 'OBJECT'; name: 'Location'; ofType: null; } }; 'locationEdge': { name: 'locationEdge'; type: { kind: 'OBJECT'; name: 'LocationsEdge'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'CreateMetaInput': { kind: 'INPUT_OBJECT'; name: 'CreateMetaInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'meta'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetaInput'; ofType: null; }; }; defaultValue: null }]; };
    'CreateMetaPayload': { kind: 'OBJECT'; name: 'CreateMetaPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'meta': { name: 'meta'; type: { kind: 'OBJECT'; name: 'Meta'; ofType: null; } }; 'metaEdge': { name: 'metaEdge'; type: { kind: 'OBJECT'; name: 'MetasEdge'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'CreateMonsterDropInput': { kind: 'INPUT_OBJECT'; name: 'CreateMonsterDropInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'monsterDrop'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MonsterDropInput'; ofType: null; }; }; defaultValue: null }]; };
    'CreateMonsterDropPayload': { kind: 'OBJECT'; name: 'CreateMonsterDropPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'itemByItem': { name: 'itemByItem'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; 'monsterByMonster': { name: 'monsterByMonster'; type: { kind: 'OBJECT'; name: 'Monster'; ofType: null; } }; 'monsterDrop': { name: 'monsterDrop'; type: { kind: 'OBJECT'; name: 'MonsterDrop'; ofType: null; } }; 'monsterDropEdge': { name: 'monsterDropEdge'; type: { kind: 'OBJECT'; name: 'MonsterDropsEdge'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'CreateMonsterInput': { kind: 'INPUT_OBJECT'; name: 'CreateMonsterInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'monster'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MonsterInput'; ofType: null; }; }; defaultValue: null }]; };
    'CreateMonsterPayload': { kind: 'OBJECT'; name: 'CreateMonsterPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'monster': { name: 'monster'; type: { kind: 'OBJECT'; name: 'Monster'; ofType: null; } }; 'monsterEdge': { name: 'monsterEdge'; type: { kind: 'OBJECT'; name: 'MonstersEdge'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'CreateOutfitEquipmentInput': { kind: 'INPUT_OBJECT'; name: 'CreateOutfitEquipmentInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'outfitEquipment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OutfitEquipmentInput'; ofType: null; }; }; defaultValue: null }]; };
    'CreateOutfitEquipmentPayload': { kind: 'OBJECT'; name: 'CreateOutfitEquipmentPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'itemByEquipment': { name: 'itemByEquipment'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; 'outfitByOutfit': { name: 'outfitByOutfit'; type: { kind: 'OBJECT'; name: 'Outfit'; ofType: null; } }; 'outfitEquipment': { name: 'outfitEquipment'; type: { kind: 'OBJECT'; name: 'OutfitEquipment'; ofType: null; } }; 'outfitEquipmentEdge': { name: 'outfitEquipmentEdge'; type: { kind: 'OBJECT'; name: 'OutfitEquipmentsEdge'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'CreateOutfitInput': { kind: 'INPUT_OBJECT'; name: 'CreateOutfitInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'outfit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OutfitInput'; ofType: null; }; }; defaultValue: null }]; };
    'CreateOutfitPayload': { kind: 'OBJECT'; name: 'CreateOutfitPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'outfit': { name: 'outfit'; type: { kind: 'OBJECT'; name: 'Outfit'; ofType: null; } }; 'outfitEdge': { name: 'outfitEdge'; type: { kind: 'OBJECT'; name: 'OutfitsEdge'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'CreateOutfitTreatInput': { kind: 'INPUT_OBJECT'; name: 'CreateOutfitTreatInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'outfitTreat'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OutfitTreatInput'; ofType: null; }; }; defaultValue: null }]; };
    'CreateOutfitTreatPayload': { kind: 'OBJECT'; name: 'CreateOutfitTreatPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'itemByItem': { name: 'itemByItem'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; 'outfitByOutfit': { name: 'outfitByOutfit'; type: { kind: 'OBJECT'; name: 'Outfit'; ofType: null; } }; 'outfitTreat': { name: 'outfitTreat'; type: { kind: 'OBJECT'; name: 'OutfitTreat'; ofType: null; } }; 'outfitTreatEdge': { name: 'outfitTreatEdge'; type: { kind: 'OBJECT'; name: 'OutfitTreatsEdge'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'CreatePathInput': { kind: 'INPUT_OBJECT'; name: 'CreatePathInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PathInput'; ofType: null; }; }; defaultValue: null }]; };
    'CreatePathPayload': { kind: 'OBJECT'; name: 'CreatePathPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'OBJECT'; name: 'Path'; ofType: null; } }; 'pathEdge': { name: 'pathEdge'; type: { kind: 'OBJECT'; name: 'PathsEdge'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'CreateSkillInput': { kind: 'INPUT_OBJECT'; name: 'CreateSkillInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'skill'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SkillInput'; ofType: null; }; }; defaultValue: null }]; };
    'CreateSkillPayload': { kind: 'OBJECT'; name: 'CreateSkillPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; 'skill': { name: 'skill'; type: { kind: 'OBJECT'; name: 'Skill'; ofType: null; } }; 'skillEdge': { name: 'skillEdge'; type: { kind: 'OBJECT'; name: 'SkillsEdge'; ofType: null; } }; }; };
    'Cursor': unknown;
    'Datetime': unknown;
    'DatetimeFilter': { kind: 'INPUT_OBJECT'; name: 'DatetimeFilter'; isOneOf: false; inputFields: [{ name: 'isNull'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'equalTo'; type: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; defaultValue: null }, { name: 'notEqualTo'; type: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; defaultValue: null }, { name: 'in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; }; }; defaultValue: null }, { name: 'notIn'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; }; }; defaultValue: null }, { name: 'lessThan'; type: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; defaultValue: null }, { name: 'lessThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; defaultValue: null }, { name: 'greaterThan'; type: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; defaultValue: null }, { name: 'greaterThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; defaultValue: null }]; };
    'DeleteClassByIdInput': { kind: 'INPUT_OBJECT'; name: 'DeleteClassByIdInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteClassInput': { kind: 'INPUT_OBJECT'; name: 'DeleteClassInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteClassPayload': { kind: 'OBJECT'; name: 'DeleteClassPayload'; fields: { 'class': { name: 'class'; type: { kind: 'OBJECT'; name: 'Class'; ofType: null; } }; 'classEdge': { name: 'classEdge'; type: { kind: 'OBJECT'; name: 'ClassesEdge'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'deletedClassId': { name: 'deletedClassId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'pathByPath': { name: 'pathByPath'; type: { kind: 'OBJECT'; name: 'Path'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'DeleteEffectByDescidInput': { kind: 'INPUT_OBJECT'; name: 'DeleteEffectByDescidInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'descid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteEffectByIdInput': { kind: 'INPUT_OBJECT'; name: 'DeleteEffectByIdInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteEffectInput': { kind: 'INPUT_OBJECT'; name: 'DeleteEffectInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteEffectPayload': { kind: 'OBJECT'; name: 'DeleteEffectPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'deletedEffectId': { name: 'deletedEffectId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'effect': { name: 'effect'; type: { kind: 'OBJECT'; name: 'Effect'; ofType: null; } }; 'effectEdge': { name: 'effectEdge'; type: { kind: 'OBJECT'; name: 'EffectsEdge'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'DeleteEquipmentByIdInput': { kind: 'INPUT_OBJECT'; name: 'DeleteEquipmentByIdInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteEquipmentInput': { kind: 'INPUT_OBJECT'; name: 'DeleteEquipmentInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteEquipmentPayload': { kind: 'OBJECT'; name: 'DeleteEquipmentPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'deletedEquipmentId': { name: 'deletedEquipmentId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'equipment': { name: 'equipment'; type: { kind: 'OBJECT'; name: 'Equipment'; ofType: null; } }; 'equipmentEdge': { name: 'equipmentEdge'; type: { kind: 'OBJECT'; name: 'EquipmentEdge'; ofType: null; } }; 'itemByItem': { name: 'itemByItem'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'DeleteFamiliarByIdInput': { kind: 'INPUT_OBJECT'; name: 'DeleteFamiliarByIdInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteFamiliarInput': { kind: 'INPUT_OBJECT'; name: 'DeleteFamiliarInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteFamiliarPayload': { kind: 'OBJECT'; name: 'DeleteFamiliarPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'deletedFamiliarId': { name: 'deletedFamiliarId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'familiar': { name: 'familiar'; type: { kind: 'OBJECT'; name: 'Familiar'; ofType: null; } }; 'familiarEdge': { name: 'familiarEdge'; type: { kind: 'OBJECT'; name: 'FamiliarsEdge'; ofType: null; } }; 'itemByEquipment': { name: 'itemByEquipment'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; 'itemByLarva': { name: 'itemByLarva'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'DeleteFoldGroupByIdInput': { kind: 'INPUT_OBJECT'; name: 'DeleteFoldGroupByIdInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteFoldGroupInput': { kind: 'INPUT_OBJECT'; name: 'DeleteFoldGroupInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteFoldGroupPayload': { kind: 'OBJECT'; name: 'DeleteFoldGroupPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'deletedFoldGroupId': { name: 'deletedFoldGroupId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'foldGroup': { name: 'foldGroup'; type: { kind: 'OBJECT'; name: 'FoldGroup'; ofType: null; } }; 'foldGroupEdge': { name: 'foldGroupEdge'; type: { kind: 'OBJECT'; name: 'FoldGroupsEdge'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'DeleteItemByDescidInput': { kind: 'INPUT_OBJECT'; name: 'DeleteItemByDescidInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'descid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteItemByIdInput': { kind: 'INPUT_OBJECT'; name: 'DeleteItemByIdInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteItemInput': { kind: 'INPUT_OBJECT'; name: 'DeleteItemInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteItemPayload': { kind: 'OBJECT'; name: 'DeleteItemPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'deletedItemId': { name: 'deletedItemId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'item': { name: 'item'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; 'itemEdge': { name: 'itemEdge'; type: { kind: 'OBJECT'; name: 'ItemsEdge'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'DeleteLocationByNameInput': { kind: 'INPUT_OBJECT'; name: 'DeleteLocationByNameInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteLocationInput': { kind: 'INPUT_OBJECT'; name: 'DeleteLocationInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteLocationPayload': { kind: 'OBJECT'; name: 'DeleteLocationPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'deletedLocationId': { name: 'deletedLocationId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'location': { name: 'location'; type: { kind: 'OBJECT'; name: 'Location'; ofType: null; } }; 'locationEdge': { name: 'locationEdge'; type: { kind: 'OBJECT'; name: 'LocationsEdge'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'DeleteMonsterByIdInput': { kind: 'INPUT_OBJECT'; name: 'DeleteMonsterByIdInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteMonsterInput': { kind: 'INPUT_OBJECT'; name: 'DeleteMonsterInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteMonsterPayload': { kind: 'OBJECT'; name: 'DeleteMonsterPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'deletedMonsterId': { name: 'deletedMonsterId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'monster': { name: 'monster'; type: { kind: 'OBJECT'; name: 'Monster'; ofType: null; } }; 'monsterEdge': { name: 'monsterEdge'; type: { kind: 'OBJECT'; name: 'MonstersEdge'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'DeleteOutfitByIdInput': { kind: 'INPUT_OBJECT'; name: 'DeleteOutfitByIdInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteOutfitInput': { kind: 'INPUT_OBJECT'; name: 'DeleteOutfitInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteOutfitPayload': { kind: 'OBJECT'; name: 'DeleteOutfitPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'deletedOutfitId': { name: 'deletedOutfitId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'outfit': { name: 'outfit'; type: { kind: 'OBJECT'; name: 'Outfit'; ofType: null; } }; 'outfitEdge': { name: 'outfitEdge'; type: { kind: 'OBJECT'; name: 'OutfitsEdge'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'DeletePathByIdInput': { kind: 'INPUT_OBJECT'; name: 'DeletePathByIdInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'DeletePathByImageInput': { kind: 'INPUT_OBJECT'; name: 'DeletePathByImageInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'DeletePathInput': { kind: 'INPUT_OBJECT'; name: 'DeletePathInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'DeletePathPayload': { kind: 'OBJECT'; name: 'DeletePathPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'deletedPathId': { name: 'deletedPathId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'OBJECT'; name: 'Path'; ofType: null; } }; 'pathEdge': { name: 'pathEdge'; type: { kind: 'OBJECT'; name: 'PathsEdge'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'DeleteSkillByIdInput': { kind: 'INPUT_OBJECT'; name: 'DeleteSkillByIdInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteSkillInput': { kind: 'INPUT_OBJECT'; name: 'DeleteSkillInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteSkillPayload': { kind: 'OBJECT'; name: 'DeleteSkillPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'deletedSkillId': { name: 'deletedSkillId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; 'skill': { name: 'skill'; type: { kind: 'OBJECT'; name: 'Skill'; ofType: null; } }; 'skillEdge': { name: 'skillEdge'; type: { kind: 'OBJECT'; name: 'SkillsEdge'; ofType: null; } }; }; };
    'Effect': { kind: 'OBJECT'; name: 'Effect'; fields: { 'actions': { name: 'actions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'ambiguous': { name: 'ambiguous'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'descid': { name: 'descid'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'nodeId': { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'nohookah': { name: 'nohookah'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'nopvp': { name: 'nopvp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'noremove': { name: 'noremove'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'quality': { name: 'quality'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'EffectQuality'; ofType: null; }; } }; 'song': { name: 'song'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'EffectCondition': { kind: 'INPUT_OBJECT'; name: 'EffectCondition'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'descid'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'quality'; type: { kind: 'ENUM'; name: 'EffectQuality'; ofType: null; }; defaultValue: null }, { name: 'nohookah'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'nopvp'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'noremove'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'song'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'actions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'ambiguous'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'EffectFilter': { kind: 'INPUT_OBJECT'; name: 'EffectFilter'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'descid'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'quality'; type: { kind: 'INPUT_OBJECT'; name: 'EffectQualityFilter'; ofType: null; }; defaultValue: null }, { name: 'nohookah'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'nopvp'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'noremove'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'song'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'actions'; type: { kind: 'INPUT_OBJECT'; name: 'StringListFilter'; ofType: null; }; defaultValue: null }, { name: 'ambiguous'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'EffectFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'EffectFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'EffectFilter'; ofType: null; }; defaultValue: null }]; };
    'EffectInput': { kind: 'INPUT_OBJECT'; name: 'EffectInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'descid'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'quality'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'EffectQuality'; ofType: null; }; }; defaultValue: null }, { name: 'nohookah'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'nopvp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'noremove'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'song'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'actions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'ambiguous'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'EffectPatch': { kind: 'INPUT_OBJECT'; name: 'EffectPatch'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'descid'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'quality'; type: { kind: 'ENUM'; name: 'EffectQuality'; ofType: null; }; defaultValue: null }, { name: 'nohookah'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'nopvp'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'noremove'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'song'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'actions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'ambiguous'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'EffectQuality': { name: 'EffectQuality'; enumValues: 'BAD' | 'GOOD' | 'NEUTRAL'; };
    'EffectQualityFilter': { kind: 'INPUT_OBJECT'; name: 'EffectQualityFilter'; isOneOf: false; inputFields: [{ name: 'isNull'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'equalTo'; type: { kind: 'ENUM'; name: 'EffectQuality'; ofType: null; }; defaultValue: null }, { name: 'notEqualTo'; type: { kind: 'ENUM'; name: 'EffectQuality'; ofType: null; }; defaultValue: null }, { name: 'in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'EffectQuality'; ofType: null; }; }; }; defaultValue: null }, { name: 'notIn'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'EffectQuality'; ofType: null; }; }; }; defaultValue: null }, { name: 'lessThan'; type: { kind: 'ENUM'; name: 'EffectQuality'; ofType: null; }; defaultValue: null }, { name: 'lessThanOrEqualTo'; type: { kind: 'ENUM'; name: 'EffectQuality'; ofType: null; }; defaultValue: null }, { name: 'greaterThan'; type: { kind: 'ENUM'; name: 'EffectQuality'; ofType: null; }; defaultValue: null }, { name: 'greaterThanOrEqualTo'; type: { kind: 'ENUM'; name: 'EffectQuality'; ofType: null; }; defaultValue: null }]; };
    'EffectsConnection': { kind: 'OBJECT'; name: 'EffectsConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'EffectsEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Effect'; ofType: null; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'EffectsEdge': { kind: 'OBJECT'; name: 'EffectsEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Effect'; ofType: null; } }; }; };
    'EffectsOrderBy': { name: 'EffectsOrderBy'; enumValues: 'NATURAL' | 'ID_ASC' | 'ID_DESC' | 'NAME_ASC' | 'NAME_DESC' | 'DESCID_ASC' | 'DESCID_DESC' | 'IMAGE_ASC' | 'IMAGE_DESC' | 'QUALITY_ASC' | 'QUALITY_DESC' | 'NOHOOKAH_ASC' | 'NOHOOKAH_DESC' | 'NOPVP_ASC' | 'NOPVP_DESC' | 'NOREMOVE_ASC' | 'NOREMOVE_DESC' | 'SONG_ASC' | 'SONG_DESC' | 'ACTIONS_ASC' | 'ACTIONS_DESC' | 'AMBIGUOUS_ASC' | 'AMBIGUOUS_DESC' | 'PRIMARY_KEY_ASC' | 'PRIMARY_KEY_DESC'; };
    'Equipment': { kind: 'OBJECT'; name: 'Equipment'; fields: { 'hands': { name: 'hands'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'item': { name: 'item'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'itemByItem': { name: 'itemByItem'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; 'moxRequirement': { name: 'moxRequirement'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'musRequirement': { name: 'musRequirement'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'mysRequirement': { name: 'mysRequirement'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'nodeId': { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'power': { name: 'power'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'EquipmentCondition': { kind: 'INPUT_OBJECT'; name: 'EquipmentCondition'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'item'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'power'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'musRequirement'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'mysRequirement'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'moxRequirement'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'hands'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'EquipmentConnection': { kind: 'OBJECT'; name: 'EquipmentConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'EquipmentEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Equipment'; ofType: null; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'EquipmentEdge': { kind: 'OBJECT'; name: 'EquipmentEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Equipment'; ofType: null; } }; }; };
    'EquipmentFilter': { kind: 'INPUT_OBJECT'; name: 'EquipmentFilter'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'item'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'power'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'musRequirement'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'mysRequirement'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'moxRequirement'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'hands'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'itemByItem'; type: { kind: 'INPUT_OBJECT'; name: 'ItemFilter'; ofType: null; }; defaultValue: null }, { name: 'itemByItemExists'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'EquipmentFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'EquipmentFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'EquipmentFilter'; ofType: null; }; defaultValue: null }]; };
    'EquipmentInput': { kind: 'INPUT_OBJECT'; name: 'EquipmentInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'item'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'power'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'musRequirement'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'mysRequirement'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'moxRequirement'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'type'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'hands'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'EquipmentOrderBy': { name: 'EquipmentOrderBy'; enumValues: 'NATURAL' | 'ID_ASC' | 'ID_DESC' | 'ITEM_ASC' | 'ITEM_DESC' | 'POWER_ASC' | 'POWER_DESC' | 'MUS_REQUIREMENT_ASC' | 'MUS_REQUIREMENT_DESC' | 'MYS_REQUIREMENT_ASC' | 'MYS_REQUIREMENT_DESC' | 'MOX_REQUIREMENT_ASC' | 'MOX_REQUIREMENT_DESC' | 'TYPE_ASC' | 'TYPE_DESC' | 'HANDS_ASC' | 'HANDS_DESC' | 'PRIMARY_KEY_ASC' | 'PRIMARY_KEY_DESC'; };
    'EquipmentPatch': { kind: 'INPUT_OBJECT'; name: 'EquipmentPatch'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'item'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'power'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'musRequirement'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'mysRequirement'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'moxRequirement'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'hands'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'Familiar': { kind: 'OBJECT'; name: 'Familiar'; fields: { 'attributes': { name: 'attributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'cageMatch': { name: 'cageMatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'categories': { name: 'categories'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'FamiliarCategory'; ofType: null; }; }; } }; 'equipment': { name: 'equipment'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'hideAndSeek': { name: 'hideAndSeek'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'itemByEquipment': { name: 'itemByEquipment'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; 'itemByLarva': { name: 'itemByLarva'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; 'larva': { name: 'larva'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'nodeId': { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'obstacleCourse': { name: 'obstacleCourse'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'scavengerHunt': { name: 'scavengerHunt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'FamiliarCategory': { name: 'FamiliarCategory'; enumValues: 'BLOCK' | 'COMBAT0' | 'COMBAT1' | 'DELEVEL' | 'DROP' | 'HP0' | 'HP1' | 'ITEM0' | 'ITEM1' | 'ITEM2' | 'ITEM3' | 'MEAT0' | 'MEAT1' | 'MP0' | 'MP1' | 'OTHER0' | 'OTHER1' | 'PASSIVE' | 'STAT0' | 'STAT1' | 'STAT2' | 'STAT3' | 'UNDERWATER' | 'VARIABLE'; };
    'FamiliarCategoryListFilter': { kind: 'INPUT_OBJECT'; name: 'FamiliarCategoryListFilter'; isOneOf: false; inputFields: [{ name: 'isNull'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'equalTo'; type: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'FamiliarCategory'; ofType: null; }; }; defaultValue: null }, { name: 'notEqualTo'; type: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'FamiliarCategory'; ofType: null; }; }; defaultValue: null }, { name: 'lessThan'; type: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'FamiliarCategory'; ofType: null; }; }; defaultValue: null }, { name: 'lessThanOrEqualTo'; type: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'FamiliarCategory'; ofType: null; }; }; defaultValue: null }, { name: 'greaterThan'; type: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'FamiliarCategory'; ofType: null; }; }; defaultValue: null }, { name: 'greaterThanOrEqualTo'; type: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'FamiliarCategory'; ofType: null; }; }; defaultValue: null }, { name: 'anyEqualTo'; type: { kind: 'ENUM'; name: 'FamiliarCategory'; ofType: null; }; defaultValue: null }, { name: 'anyNotEqualTo'; type: { kind: 'ENUM'; name: 'FamiliarCategory'; ofType: null; }; defaultValue: null }]; };
    'FamiliarCondition': { kind: 'INPUT_OBJECT'; name: 'FamiliarCondition'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'categories'; type: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'FamiliarCategory'; ofType: null; }; }; defaultValue: null }, { name: 'larva'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'equipment'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'cageMatch'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'scavengerHunt'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'obstacleCourse'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'hideAndSeek'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'attributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'FamiliarFilter': { kind: 'INPUT_OBJECT'; name: 'FamiliarFilter'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'categories'; type: { kind: 'INPUT_OBJECT'; name: 'FamiliarCategoryListFilter'; ofType: null; }; defaultValue: null }, { name: 'larva'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'equipment'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'cageMatch'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'scavengerHunt'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'obstacleCourse'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'hideAndSeek'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'attributes'; type: { kind: 'INPUT_OBJECT'; name: 'StringListFilter'; ofType: null; }; defaultValue: null }, { name: 'itemByLarva'; type: { kind: 'INPUT_OBJECT'; name: 'ItemFilter'; ofType: null; }; defaultValue: null }, { name: 'itemByLarvaExists'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'itemByEquipment'; type: { kind: 'INPUT_OBJECT'; name: 'ItemFilter'; ofType: null; }; defaultValue: null }, { name: 'itemByEquipmentExists'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'FamiliarFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'FamiliarFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'FamiliarFilter'; ofType: null; }; defaultValue: null }]; };
    'FamiliarInput': { kind: 'INPUT_OBJECT'; name: 'FamiliarInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'image'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'categories'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'FamiliarCategory'; ofType: null; }; }; }; defaultValue: null }, { name: 'larva'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'equipment'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'cageMatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'scavengerHunt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'obstacleCourse'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'hideAndSeek'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'attributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'FamiliarPatch': { kind: 'INPUT_OBJECT'; name: 'FamiliarPatch'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'categories'; type: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'FamiliarCategory'; ofType: null; }; }; defaultValue: null }, { name: 'larva'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'equipment'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'cageMatch'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'scavengerHunt'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'obstacleCourse'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'hideAndSeek'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'attributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'FamiliarsConnection': { kind: 'OBJECT'; name: 'FamiliarsConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FamiliarsEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Familiar'; ofType: null; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'FamiliarsEdge': { kind: 'OBJECT'; name: 'FamiliarsEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Familiar'; ofType: null; } }; }; };
    'FamiliarsOrderBy': { name: 'FamiliarsOrderBy'; enumValues: 'NATURAL' | 'ID_ASC' | 'ID_DESC' | 'NAME_ASC' | 'NAME_DESC' | 'IMAGE_ASC' | 'IMAGE_DESC' | 'CATEGORIES_ASC' | 'CATEGORIES_DESC' | 'LARVA_ASC' | 'LARVA_DESC' | 'EQUIPMENT_ASC' | 'EQUIPMENT_DESC' | 'CAGE_MATCH_ASC' | 'CAGE_MATCH_DESC' | 'SCAVENGER_HUNT_ASC' | 'SCAVENGER_HUNT_DESC' | 'OBSTACLE_COURSE_ASC' | 'OBSTACLE_COURSE_DESC' | 'HIDE_AND_SEEK_ASC' | 'HIDE_AND_SEEK_DESC' | 'ATTRIBUTES_ASC' | 'ATTRIBUTES_DESC' | 'PRIMARY_KEY_ASC' | 'PRIMARY_KEY_DESC'; };
    'Float': unknown;
    'FloatFilter': { kind: 'INPUT_OBJECT'; name: 'FloatFilter'; isOneOf: false; inputFields: [{ name: 'isNull'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'equalTo'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'notEqualTo'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; }; defaultValue: null }, { name: 'notIn'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; }; defaultValue: null }, { name: 'lessThan'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'lessThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'greaterThan'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'greaterThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }]; };
    'FoldGroup': { kind: 'OBJECT'; name: 'FoldGroup'; fields: { 'damage': { name: 'damage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'foldablesByFoldGroup': { name: 'foldablesByFoldGroup'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FoldablesConnection'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'nodeId': { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'FoldGroupCondition': { kind: 'INPUT_OBJECT'; name: 'FoldGroupCondition'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'damage'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'FoldGroupFilter': { kind: 'INPUT_OBJECT'; name: 'FoldGroupFilter'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'damage'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'foldablesByFoldGroup'; type: { kind: 'INPUT_OBJECT'; name: 'FoldGroupToManyFoldableFilter'; ofType: null; }; defaultValue: null }, { name: 'foldablesByFoldGroupExist'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'FoldGroupFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'FoldGroupFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'FoldGroupFilter'; ofType: null; }; defaultValue: null }]; };
    'FoldGroupInput': { kind: 'INPUT_OBJECT'; name: 'FoldGroupInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'damage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'FoldGroupPatch': { kind: 'INPUT_OBJECT'; name: 'FoldGroupPatch'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'damage'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'FoldGroupToManyFoldableFilter': { kind: 'INPUT_OBJECT'; name: 'FoldGroupToManyFoldableFilter'; isOneOf: false; inputFields: [{ name: 'every'; type: { kind: 'INPUT_OBJECT'; name: 'FoldableFilter'; ofType: null; }; defaultValue: null }, { name: 'some'; type: { kind: 'INPUT_OBJECT'; name: 'FoldableFilter'; ofType: null; }; defaultValue: null }, { name: 'none'; type: { kind: 'INPUT_OBJECT'; name: 'FoldableFilter'; ofType: null; }; defaultValue: null }]; };
    'FoldGroupsConnection': { kind: 'OBJECT'; name: 'FoldGroupsConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FoldGroupsEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'FoldGroup'; ofType: null; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'FoldGroupsEdge': { kind: 'OBJECT'; name: 'FoldGroupsEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'FoldGroup'; ofType: null; } }; }; };
    'FoldGroupsOrderBy': { name: 'FoldGroupsOrderBy'; enumValues: 'NATURAL' | 'ID_ASC' | 'ID_DESC' | 'DAMAGE_ASC' | 'DAMAGE_DESC' | 'PRIMARY_KEY_ASC' | 'PRIMARY_KEY_DESC'; };
    'Foldable': { kind: 'OBJECT'; name: 'Foldable'; fields: { 'foldGroup': { name: 'foldGroup'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'foldGroupByFoldGroup': { name: 'foldGroupByFoldGroup'; type: { kind: 'OBJECT'; name: 'FoldGroup'; ofType: null; } }; 'item': { name: 'item'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'itemByItem': { name: 'itemByItem'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; }; };
    'FoldableCondition': { kind: 'INPUT_OBJECT'; name: 'FoldableCondition'; isOneOf: false; inputFields: [{ name: 'foldGroup'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'item'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'FoldableFilter': { kind: 'INPUT_OBJECT'; name: 'FoldableFilter'; isOneOf: false; inputFields: [{ name: 'foldGroup'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'item'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'foldGroupByFoldGroup'; type: { kind: 'INPUT_OBJECT'; name: 'FoldGroupFilter'; ofType: null; }; defaultValue: null }, { name: 'foldGroupByFoldGroupExists'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'itemByItem'; type: { kind: 'INPUT_OBJECT'; name: 'ItemFilter'; ofType: null; }; defaultValue: null }, { name: 'itemByItemExists'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'FoldableFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'FoldableFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'FoldableFilter'; ofType: null; }; defaultValue: null }]; };
    'FoldableInput': { kind: 'INPUT_OBJECT'; name: 'FoldableInput'; isOneOf: false; inputFields: [{ name: 'foldGroup'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'item'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'FoldablesConnection': { kind: 'OBJECT'; name: 'FoldablesConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FoldablesEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Foldable'; ofType: null; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'FoldablesEdge': { kind: 'OBJECT'; name: 'FoldablesEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Foldable'; ofType: null; } }; }; };
    'FoldablesOrderBy': { name: 'FoldablesOrderBy'; enumValues: 'NATURAL' | 'FOLD_GROUP_ASC' | 'FOLD_GROUP_DESC' | 'ITEM_ASC' | 'ITEM_DESC'; };
    'ID': unknown;
    'Int': unknown;
    'IntFilter': { kind: 'INPUT_OBJECT'; name: 'IntFilter'; isOneOf: false; inputFields: [{ name: 'isNull'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'equalTo'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'notEqualTo'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; }; defaultValue: null }, { name: 'notIn'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; }; defaultValue: null }, { name: 'lessThan'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'lessThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'greaterThan'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'greaterThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'Item': { kind: 'OBJECT'; name: 'Item'; fields: { 'ambiguous': { name: 'ambiguous'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'autosell': { name: 'autosell'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'descid': { name: 'descid'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'discardable': { name: 'discardable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'equipmentByItem': { name: 'equipmentByItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'EquipmentConnection'; ofType: null; }; } }; 'familiarsByEquipment': { name: 'familiarsByEquipment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FamiliarsConnection'; ofType: null; }; } }; 'familiarsByLarva': { name: 'familiarsByLarva'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FamiliarsConnection'; ofType: null; }; } }; 'foldablesByItem': { name: 'foldablesByItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FoldablesConnection'; ofType: null; }; } }; 'gift': { name: 'gift'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'monsterDropsByItem': { name: 'monsterDropsByItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MonsterDropsConnection'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'nodeId': { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'outfitEquipmentsByEquipment': { name: 'outfitEquipmentsByEquipment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OutfitEquipmentsConnection'; ofType: null; }; } }; 'outfitTreatsByItem': { name: 'outfitTreatsByItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OutfitTreatsConnection'; ofType: null; }; } }; 'plural': { name: 'plural'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'quest': { name: 'quest'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'tradeable': { name: 'tradeable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'uses': { name: 'uses'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'ItemUse'; ofType: null; }; }; } }; }; };
    'ItemCondition': { kind: 'INPUT_OBJECT'; name: 'ItemCondition'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'descid'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'uses'; type: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'ItemUse'; ofType: null; }; }; defaultValue: null }, { name: 'quest'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'gift'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'tradeable'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'discardable'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'autosell'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'plural'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'ambiguous'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'ItemFilter': { kind: 'INPUT_OBJECT'; name: 'ItemFilter'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'descid'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'uses'; type: { kind: 'INPUT_OBJECT'; name: 'ItemUseListFilter'; ofType: null; }; defaultValue: null }, { name: 'quest'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'gift'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'tradeable'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'discardable'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'autosell'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'plural'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'ambiguous'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'equipmentByItem'; type: { kind: 'INPUT_OBJECT'; name: 'ItemToManyEquipmentFilter'; ofType: null; }; defaultValue: null }, { name: 'equipmentByItemExist'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'familiarsByLarva'; type: { kind: 'INPUT_OBJECT'; name: 'ItemToManyFamiliarFilter'; ofType: null; }; defaultValue: null }, { name: 'familiarsByLarvaExist'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'familiarsByEquipment'; type: { kind: 'INPUT_OBJECT'; name: 'ItemToManyFamiliarFilter'; ofType: null; }; defaultValue: null }, { name: 'familiarsByEquipmentExist'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'monsterDropsByItem'; type: { kind: 'INPUT_OBJECT'; name: 'ItemToManyMonsterDropFilter'; ofType: null; }; defaultValue: null }, { name: 'monsterDropsByItemExist'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'outfitEquipmentsByEquipment'; type: { kind: 'INPUT_OBJECT'; name: 'ItemToManyOutfitEquipmentFilter'; ofType: null; }; defaultValue: null }, { name: 'outfitEquipmentsByEquipmentExist'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'outfitTreatsByItem'; type: { kind: 'INPUT_OBJECT'; name: 'ItemToManyOutfitTreatFilter'; ofType: null; }; defaultValue: null }, { name: 'outfitTreatsByItemExist'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'foldablesByItem'; type: { kind: 'INPUT_OBJECT'; name: 'ItemToManyFoldableFilter'; ofType: null; }; defaultValue: null }, { name: 'foldablesByItemExist'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ItemFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ItemFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'ItemFilter'; ofType: null; }; defaultValue: null }]; };
    'ItemInput': { kind: 'INPUT_OBJECT'; name: 'ItemInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'descid'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'uses'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'ItemUse'; ofType: null; }; }; }; defaultValue: null }, { name: 'quest'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'gift'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'tradeable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'discardable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'autosell'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'plural'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'ambiguous'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'ItemPatch': { kind: 'INPUT_OBJECT'; name: 'ItemPatch'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'descid'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'uses'; type: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'ItemUse'; ofType: null; }; }; defaultValue: null }, { name: 'quest'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'gift'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'tradeable'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'discardable'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'autosell'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'plural'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'ambiguous'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'ItemToManyEquipmentFilter': { kind: 'INPUT_OBJECT'; name: 'ItemToManyEquipmentFilter'; isOneOf: false; inputFields: [{ name: 'every'; type: { kind: 'INPUT_OBJECT'; name: 'EquipmentFilter'; ofType: null; }; defaultValue: null }, { name: 'some'; type: { kind: 'INPUT_OBJECT'; name: 'EquipmentFilter'; ofType: null; }; defaultValue: null }, { name: 'none'; type: { kind: 'INPUT_OBJECT'; name: 'EquipmentFilter'; ofType: null; }; defaultValue: null }]; };
    'ItemToManyFamiliarFilter': { kind: 'INPUT_OBJECT'; name: 'ItemToManyFamiliarFilter'; isOneOf: false; inputFields: [{ name: 'every'; type: { kind: 'INPUT_OBJECT'; name: 'FamiliarFilter'; ofType: null; }; defaultValue: null }, { name: 'some'; type: { kind: 'INPUT_OBJECT'; name: 'FamiliarFilter'; ofType: null; }; defaultValue: null }, { name: 'none'; type: { kind: 'INPUT_OBJECT'; name: 'FamiliarFilter'; ofType: null; }; defaultValue: null }]; };
    'ItemToManyFoldableFilter': { kind: 'INPUT_OBJECT'; name: 'ItemToManyFoldableFilter'; isOneOf: false; inputFields: [{ name: 'every'; type: { kind: 'INPUT_OBJECT'; name: 'FoldableFilter'; ofType: null; }; defaultValue: null }, { name: 'some'; type: { kind: 'INPUT_OBJECT'; name: 'FoldableFilter'; ofType: null; }; defaultValue: null }, { name: 'none'; type: { kind: 'INPUT_OBJECT'; name: 'FoldableFilter'; ofType: null; }; defaultValue: null }]; };
    'ItemToManyMonsterDropFilter': { kind: 'INPUT_OBJECT'; name: 'ItemToManyMonsterDropFilter'; isOneOf: false; inputFields: [{ name: 'every'; type: { kind: 'INPUT_OBJECT'; name: 'MonsterDropFilter'; ofType: null; }; defaultValue: null }, { name: 'some'; type: { kind: 'INPUT_OBJECT'; name: 'MonsterDropFilter'; ofType: null; }; defaultValue: null }, { name: 'none'; type: { kind: 'INPUT_OBJECT'; name: 'MonsterDropFilter'; ofType: null; }; defaultValue: null }]; };
    'ItemToManyOutfitEquipmentFilter': { kind: 'INPUT_OBJECT'; name: 'ItemToManyOutfitEquipmentFilter'; isOneOf: false; inputFields: [{ name: 'every'; type: { kind: 'INPUT_OBJECT'; name: 'OutfitEquipmentFilter'; ofType: null; }; defaultValue: null }, { name: 'some'; type: { kind: 'INPUT_OBJECT'; name: 'OutfitEquipmentFilter'; ofType: null; }; defaultValue: null }, { name: 'none'; type: { kind: 'INPUT_OBJECT'; name: 'OutfitEquipmentFilter'; ofType: null; }; defaultValue: null }]; };
    'ItemToManyOutfitTreatFilter': { kind: 'INPUT_OBJECT'; name: 'ItemToManyOutfitTreatFilter'; isOneOf: false; inputFields: [{ name: 'every'; type: { kind: 'INPUT_OBJECT'; name: 'OutfitTreatFilter'; ofType: null; }; defaultValue: null }, { name: 'some'; type: { kind: 'INPUT_OBJECT'; name: 'OutfitTreatFilter'; ofType: null; }; defaultValue: null }, { name: 'none'; type: { kind: 'INPUT_OBJECT'; name: 'OutfitTreatFilter'; ofType: null; }; defaultValue: null }]; };
    'ItemUse': { name: 'ItemUse'; enumValues: 'ACCESSORY' | 'AVATAR' | 'BOOTSKIN' | 'BOOTSPUR' | 'BOUNTY' | 'CANDY' | 'CANDY1' | 'CANDY2' | 'CARD' | 'CHOCOLATE' | 'COMBAT' | 'COMBAT_REUSABLE' | 'CONTAINER' | 'COOK' | 'CURSE' | 'DRINK' | 'DRINK_HELPER' | 'FAMILIAR' | 'FANCY' | 'FOLDER' | 'FOOD' | 'FOOD_HELPER' | 'GROW' | 'GUARDIAN' | 'HAT' | 'MATCHABLE' | 'MESSAGE' | 'MIX' | 'MULTIPLE' | 'OFFHAND' | 'PACKAGE' | 'PANTS' | 'PASTE' | 'POKEPILL' | 'POTION' | 'REUSABLE' | 'SHIRT' | 'SINGLE' | 'SIXGUN' | 'SMITH' | 'SOLO' | 'SPHERE' | 'SPLEEN' | 'STICKER' | 'USABLE' | 'WEAPON' | 'ZAP'; };
    'ItemUseListFilter': { kind: 'INPUT_OBJECT'; name: 'ItemUseListFilter'; isOneOf: false; inputFields: [{ name: 'isNull'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'equalTo'; type: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'ItemUse'; ofType: null; }; }; defaultValue: null }, { name: 'notEqualTo'; type: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'ItemUse'; ofType: null; }; }; defaultValue: null }, { name: 'lessThan'; type: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'ItemUse'; ofType: null; }; }; defaultValue: null }, { name: 'lessThanOrEqualTo'; type: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'ItemUse'; ofType: null; }; }; defaultValue: null }, { name: 'greaterThan'; type: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'ItemUse'; ofType: null; }; }; defaultValue: null }, { name: 'greaterThanOrEqualTo'; type: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'ItemUse'; ofType: null; }; }; defaultValue: null }, { name: 'anyEqualTo'; type: { kind: 'ENUM'; name: 'ItemUse'; ofType: null; }; defaultValue: null }, { name: 'anyNotEqualTo'; type: { kind: 'ENUM'; name: 'ItemUse'; ofType: null; }; defaultValue: null }]; };
    'ItemsConnection': { kind: 'OBJECT'; name: 'ItemsConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ItemsEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Item'; ofType: null; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'ItemsEdge': { kind: 'OBJECT'; name: 'ItemsEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; }; };
    'ItemsOrderBy': { name: 'ItemsOrderBy'; enumValues: 'NATURAL' | 'ID_ASC' | 'ID_DESC' | 'NAME_ASC' | 'NAME_DESC' | 'DESCID_ASC' | 'DESCID_DESC' | 'IMAGE_ASC' | 'IMAGE_DESC' | 'USES_ASC' | 'USES_DESC' | 'QUEST_ASC' | 'QUEST_DESC' | 'GIFT_ASC' | 'GIFT_DESC' | 'TRADEABLE_ASC' | 'TRADEABLE_DESC' | 'DISCARDABLE_ASC' | 'DISCARDABLE_DESC' | 'AUTOSELL_ASC' | 'AUTOSELL_DESC' | 'PLURAL_ASC' | 'PLURAL_DESC' | 'AMBIGUOUS_ASC' | 'AMBIGUOUS_DESC' | 'PRIMARY_KEY_ASC' | 'PRIMARY_KEY_DESC'; };
    'Location': { kind: 'OBJECT'; name: 'Location'; fields: { 'difficulty': { name: 'difficulty'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LocationDifficulty'; ofType: null; }; } }; 'environment': { name: 'environment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LocationEnvironment'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'nodeId': { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'nowander': { name: 'nowander'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'overdrunk': { name: 'overdrunk'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'statRequirement': { name: 'statRequirement'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'waterLevel': { name: 'waterLevel'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'zone': { name: 'zone'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'LocationCondition': { kind: 'INPUT_OBJECT'; name: 'LocationCondition'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'zone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'difficulty'; type: { kind: 'ENUM'; name: 'LocationDifficulty'; ofType: null; }; defaultValue: null }, { name: 'environment'; type: { kind: 'ENUM'; name: 'LocationEnvironment'; ofType: null; }; defaultValue: null }, { name: 'statRequirement'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'waterLevel'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'overdrunk'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'nowander'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'LocationDifficulty': { name: 'LocationDifficulty'; enumValues: 'HIGH' | 'LOW' | 'MEDIUM' | 'NONE' | 'UNKNOWN'; };
    'LocationDifficultyFilter': { kind: 'INPUT_OBJECT'; name: 'LocationDifficultyFilter'; isOneOf: false; inputFields: [{ name: 'isNull'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'equalTo'; type: { kind: 'ENUM'; name: 'LocationDifficulty'; ofType: null; }; defaultValue: null }, { name: 'notEqualTo'; type: { kind: 'ENUM'; name: 'LocationDifficulty'; ofType: null; }; defaultValue: null }, { name: 'in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LocationDifficulty'; ofType: null; }; }; }; defaultValue: null }, { name: 'notIn'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LocationDifficulty'; ofType: null; }; }; }; defaultValue: null }, { name: 'lessThan'; type: { kind: 'ENUM'; name: 'LocationDifficulty'; ofType: null; }; defaultValue: null }, { name: 'lessThanOrEqualTo'; type: { kind: 'ENUM'; name: 'LocationDifficulty'; ofType: null; }; defaultValue: null }, { name: 'greaterThan'; type: { kind: 'ENUM'; name: 'LocationDifficulty'; ofType: null; }; defaultValue: null }, { name: 'greaterThanOrEqualTo'; type: { kind: 'ENUM'; name: 'LocationDifficulty'; ofType: null; }; defaultValue: null }]; };
    'LocationEnvironment': { name: 'LocationEnvironment'; enumValues: 'INDOOR' | 'NONE' | 'OUTDOOR' | 'UNDERGROUND' | 'UNDERWATER'; };
    'LocationEnvironmentFilter': { kind: 'INPUT_OBJECT'; name: 'LocationEnvironmentFilter'; isOneOf: false; inputFields: [{ name: 'isNull'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'equalTo'; type: { kind: 'ENUM'; name: 'LocationEnvironment'; ofType: null; }; defaultValue: null }, { name: 'notEqualTo'; type: { kind: 'ENUM'; name: 'LocationEnvironment'; ofType: null; }; defaultValue: null }, { name: 'in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LocationEnvironment'; ofType: null; }; }; }; defaultValue: null }, { name: 'notIn'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LocationEnvironment'; ofType: null; }; }; }; defaultValue: null }, { name: 'lessThan'; type: { kind: 'ENUM'; name: 'LocationEnvironment'; ofType: null; }; defaultValue: null }, { name: 'lessThanOrEqualTo'; type: { kind: 'ENUM'; name: 'LocationEnvironment'; ofType: null; }; defaultValue: null }, { name: 'greaterThan'; type: { kind: 'ENUM'; name: 'LocationEnvironment'; ofType: null; }; defaultValue: null }, { name: 'greaterThanOrEqualTo'; type: { kind: 'ENUM'; name: 'LocationEnvironment'; ofType: null; }; defaultValue: null }]; };
    'LocationFilter': { kind: 'INPUT_OBJECT'; name: 'LocationFilter'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'zone'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'url'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'difficulty'; type: { kind: 'INPUT_OBJECT'; name: 'LocationDifficultyFilter'; ofType: null; }; defaultValue: null }, { name: 'environment'; type: { kind: 'INPUT_OBJECT'; name: 'LocationEnvironmentFilter'; ofType: null; }; defaultValue: null }, { name: 'statRequirement'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'waterLevel'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'overdrunk'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'nowander'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'LocationFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'LocationFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'LocationFilter'; ofType: null; }; defaultValue: null }]; };
    'LocationInput': { kind: 'INPUT_OBJECT'; name: 'LocationInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'zone'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'difficulty'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LocationDifficulty'; ofType: null; }; }; defaultValue: null }, { name: 'environment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LocationEnvironment'; ofType: null; }; }; defaultValue: null }, { name: 'statRequirement'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'waterLevel'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'overdrunk'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'nowander'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }]; };
    'LocationPatch': { kind: 'INPUT_OBJECT'; name: 'LocationPatch'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'zone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'difficulty'; type: { kind: 'ENUM'; name: 'LocationDifficulty'; ofType: null; }; defaultValue: null }, { name: 'environment'; type: { kind: 'ENUM'; name: 'LocationEnvironment'; ofType: null; }; defaultValue: null }, { name: 'statRequirement'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'waterLevel'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'overdrunk'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'nowander'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'LocationsConnection': { kind: 'OBJECT'; name: 'LocationsConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LocationsEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Location'; ofType: null; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'LocationsEdge': { kind: 'OBJECT'; name: 'LocationsEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Location'; ofType: null; } }; }; };
    'LocationsOrderBy': { name: 'LocationsOrderBy'; enumValues: 'NATURAL' | 'ID_ASC' | 'ID_DESC' | 'NAME_ASC' | 'NAME_DESC' | 'ZONE_ASC' | 'ZONE_DESC' | 'URL_ASC' | 'URL_DESC' | 'DIFFICULTY_ASC' | 'DIFFICULTY_DESC' | 'ENVIRONMENT_ASC' | 'ENVIRONMENT_DESC' | 'STAT_REQUIREMENT_ASC' | 'STAT_REQUIREMENT_DESC' | 'WATER_LEVEL_ASC' | 'WATER_LEVEL_DESC' | 'OVERDRUNK_ASC' | 'OVERDRUNK_DESC' | 'NOWANDER_ASC' | 'NOWANDER_DESC' | 'PRIMARY_KEY_ASC' | 'PRIMARY_KEY_DESC'; };
    'Meta': { kind: 'OBJECT'; name: 'Meta'; fields: { 'lastUpdate': { name: 'lastUpdate'; type: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; } }; }; };
    'MetaCondition': { kind: 'INPUT_OBJECT'; name: 'MetaCondition'; isOneOf: false; inputFields: [{ name: 'lastUpdate'; type: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; defaultValue: null }]; };
    'MetaFilter': { kind: 'INPUT_OBJECT'; name: 'MetaFilter'; isOneOf: false; inputFields: [{ name: 'lastUpdate'; type: { kind: 'INPUT_OBJECT'; name: 'DatetimeFilter'; ofType: null; }; defaultValue: null }, { name: 'and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetaFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetaFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'MetaFilter'; ofType: null; }; defaultValue: null }]; };
    'MetaInput': { kind: 'INPUT_OBJECT'; name: 'MetaInput'; isOneOf: false; inputFields: [{ name: 'lastUpdate'; type: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; defaultValue: null }]; };
    'MetasConnection': { kind: 'OBJECT'; name: 'MetasConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetasEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Meta'; ofType: null; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'MetasEdge': { kind: 'OBJECT'; name: 'MetasEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Meta'; ofType: null; } }; }; };
    'MetasOrderBy': { name: 'MetasOrderBy'; enumValues: 'NATURAL' | 'LAST_UPDATE_ASC' | 'LAST_UPDATE_DESC'; };
    'Monster': { kind: 'OBJECT'; name: 'Monster'; fields: { 'ambiguous': { name: 'ambiguous'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'article': { name: 'article'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'attack': { name: 'attack'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'boss': { name: 'boss'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'defence': { name: 'defence'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'drippy': { name: 'drippy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'element': { name: 'element'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MonsterElement'; ofType: null; }; } }; 'elementalAttack': { name: 'elementalAttack'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MonsterElement'; ofType: null; }; } }; 'elementalDefence': { name: 'elementalDefence'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MonsterElement'; ofType: null; }; } }; 'elementalResistance': { name: 'elementalResistance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'experience': { name: 'experience'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'free': { name: 'free'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'ghost': { name: 'ghost'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'groupSize': { name: 'groupSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'hp': { name: 'hp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'initiative': { name: 'initiative'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'itemBlockChance': { name: 'itemBlockChance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'lucky': { name: 'lucky'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'manuel': { name: 'manuel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'meat': { name: 'meat'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'monsterDropsByMonster': { name: 'monsterDropsByMonster'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MonsterDropsConnection'; ofType: null; }; } }; 'monsterLevelMultiplier': { name: 'monsterLevelMultiplier'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'nobanish': { name: 'nobanish'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'nocopy': { name: 'nocopy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'nodeId': { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'nomanuel': { name: 'nomanuel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'nowander': { name: 'nowander'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'nowish': { name: 'nowish'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'phylum': { name: 'phylum'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'physicalResistance': { name: 'physicalResistance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'poison': { name: 'poison'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'scaling': { name: 'scaling'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'scalingCap': { name: 'scalingCap'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'scalingFloor': { name: 'scalingFloor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'skillBlockChance': { name: 'skillBlockChance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'snake': { name: 'snake'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'spellBlockChance': { name: 'spellBlockChance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'sprinkles': { name: 'sprinkles'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'superlikely': { name: 'superlikely'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'ultrarare': { name: 'ultrarare'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'wanderer': { name: 'wanderer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'wiki': { name: 'wiki'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'wish': { name: 'wish'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'MonsterCondition': { kind: 'INPUT_OBJECT'; name: 'MonsterCondition'; isOneOf: false; inputFields: [{ name: 'ambiguous'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'article'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'attack'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'boss'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'defence'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'drippy'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'element'; type: { kind: 'ENUM'; name: 'MonsterElement'; ofType: null; }; defaultValue: null }, { name: 'elementalAttack'; type: { kind: 'ENUM'; name: 'MonsterElement'; ofType: null; }; defaultValue: null }, { name: 'elementalDefence'; type: { kind: 'ENUM'; name: 'MonsterElement'; ofType: null; }; defaultValue: null }, { name: 'elementalResistance'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'experience'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'free'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'ghost'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'groupSize'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'hp'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'initiative'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'itemBlockChance'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'lucky'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'manuel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'meat'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'monsterLevelMultiplier'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nobanish'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'nocopy'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'nomanuel'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'nowander'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'nowish'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'phylum'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'physicalResistance'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'poison'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'scaling'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'scalingCap'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'scalingFloor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'skillBlockChance'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'snake'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'spellBlockChance'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'sprinkles'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'superlikely'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'ultrarare'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'wanderer'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'wiki'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'wish'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'MonsterDrop': { kind: 'OBJECT'; name: 'MonsterDrop'; fields: { 'category': { name: 'category'; type: { kind: 'ENUM'; name: 'MonsterDropCategory'; ofType: null; } }; 'item': { name: 'item'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'itemByItem': { name: 'itemByItem'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; 'monster': { name: 'monster'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'monsterByMonster': { name: 'monsterByMonster'; type: { kind: 'OBJECT'; name: 'Monster'; ofType: null; } }; 'rate': { name: 'rate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'MonsterDropCategory': { name: 'MonsterDropCategory'; enumValues: 'A' | 'C' | 'F' | 'M' | 'N' | 'P'; };
    'MonsterDropCategoryFilter': { kind: 'INPUT_OBJECT'; name: 'MonsterDropCategoryFilter'; isOneOf: false; inputFields: [{ name: 'isNull'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'equalTo'; type: { kind: 'ENUM'; name: 'MonsterDropCategory'; ofType: null; }; defaultValue: null }, { name: 'notEqualTo'; type: { kind: 'ENUM'; name: 'MonsterDropCategory'; ofType: null; }; defaultValue: null }, { name: 'in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MonsterDropCategory'; ofType: null; }; }; }; defaultValue: null }, { name: 'notIn'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MonsterDropCategory'; ofType: null; }; }; }; defaultValue: null }, { name: 'lessThan'; type: { kind: 'ENUM'; name: 'MonsterDropCategory'; ofType: null; }; defaultValue: null }, { name: 'lessThanOrEqualTo'; type: { kind: 'ENUM'; name: 'MonsterDropCategory'; ofType: null; }; defaultValue: null }, { name: 'greaterThan'; type: { kind: 'ENUM'; name: 'MonsterDropCategory'; ofType: null; }; defaultValue: null }, { name: 'greaterThanOrEqualTo'; type: { kind: 'ENUM'; name: 'MonsterDropCategory'; ofType: null; }; defaultValue: null }]; };
    'MonsterDropCondition': { kind: 'INPUT_OBJECT'; name: 'MonsterDropCondition'; isOneOf: false; inputFields: [{ name: 'monster'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'item'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'rate'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'category'; type: { kind: 'ENUM'; name: 'MonsterDropCategory'; ofType: null; }; defaultValue: null }]; };
    'MonsterDropFilter': { kind: 'INPUT_OBJECT'; name: 'MonsterDropFilter'; isOneOf: false; inputFields: [{ name: 'monster'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'item'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'rate'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'category'; type: { kind: 'INPUT_OBJECT'; name: 'MonsterDropCategoryFilter'; ofType: null; }; defaultValue: null }, { name: 'monsterByMonster'; type: { kind: 'INPUT_OBJECT'; name: 'MonsterFilter'; ofType: null; }; defaultValue: null }, { name: 'itemByItem'; type: { kind: 'INPUT_OBJECT'; name: 'ItemFilter'; ofType: null; }; defaultValue: null }, { name: 'and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MonsterDropFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MonsterDropFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'MonsterDropFilter'; ofType: null; }; defaultValue: null }]; };
    'MonsterDropInput': { kind: 'INPUT_OBJECT'; name: 'MonsterDropInput'; isOneOf: false; inputFields: [{ name: 'monster'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'item'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'rate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'category'; type: { kind: 'ENUM'; name: 'MonsterDropCategory'; ofType: null; }; defaultValue: null }]; };
    'MonsterDropsConnection': { kind: 'OBJECT'; name: 'MonsterDropsConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MonsterDropsEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MonsterDrop'; ofType: null; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'MonsterDropsEdge': { kind: 'OBJECT'; name: 'MonsterDropsEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'MonsterDrop'; ofType: null; } }; }; };
    'MonsterDropsOrderBy': { name: 'MonsterDropsOrderBy'; enumValues: 'NATURAL' | 'MONSTER_ASC' | 'MONSTER_DESC' | 'ITEM_ASC' | 'ITEM_DESC' | 'RATE_ASC' | 'RATE_DESC' | 'CATEGORY_ASC' | 'CATEGORY_DESC'; };
    'MonsterElement': { name: 'MonsterElement'; enumValues: 'BAD_SPELLING' | 'COLD' | 'CUTE' | 'HOT' | 'SHADOW' | 'SLEAZE' | 'SLIME' | 'SPOOKY' | 'STENCH' | 'SUPERCOLD'; };
    'MonsterElementFilter': { kind: 'INPUT_OBJECT'; name: 'MonsterElementFilter'; isOneOf: false; inputFields: [{ name: 'isNull'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'equalTo'; type: { kind: 'ENUM'; name: 'MonsterElement'; ofType: null; }; defaultValue: null }, { name: 'notEqualTo'; type: { kind: 'ENUM'; name: 'MonsterElement'; ofType: null; }; defaultValue: null }, { name: 'in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MonsterElement'; ofType: null; }; }; }; defaultValue: null }, { name: 'notIn'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MonsterElement'; ofType: null; }; }; }; defaultValue: null }, { name: 'lessThan'; type: { kind: 'ENUM'; name: 'MonsterElement'; ofType: null; }; defaultValue: null }, { name: 'lessThanOrEqualTo'; type: { kind: 'ENUM'; name: 'MonsterElement'; ofType: null; }; defaultValue: null }, { name: 'greaterThan'; type: { kind: 'ENUM'; name: 'MonsterElement'; ofType: null; }; defaultValue: null }, { name: 'greaterThanOrEqualTo'; type: { kind: 'ENUM'; name: 'MonsterElement'; ofType: null; }; defaultValue: null }]; };
    'MonsterFilter': { kind: 'INPUT_OBJECT'; name: 'MonsterFilter'; isOneOf: false; inputFields: [{ name: 'ambiguous'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'article'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'attack'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'boss'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'defence'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'drippy'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'element'; type: { kind: 'INPUT_OBJECT'; name: 'MonsterElementFilter'; ofType: null; }; defaultValue: null }, { name: 'elementalAttack'; type: { kind: 'INPUT_OBJECT'; name: 'MonsterElementFilter'; ofType: null; }; defaultValue: null }, { name: 'elementalDefence'; type: { kind: 'INPUT_OBJECT'; name: 'MonsterElementFilter'; ofType: null; }; defaultValue: null }, { name: 'elementalResistance'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'experience'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'free'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'ghost'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'groupSize'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'hp'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'INPUT_OBJECT'; name: 'StringListFilter'; ofType: null; }; defaultValue: null }, { name: 'initiative'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'itemBlockChance'; type: { kind: 'INPUT_OBJECT'; name: 'FloatFilter'; ofType: null; }; defaultValue: null }, { name: 'lucky'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'manuel'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'meat'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'monsterLevelMultiplier'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'nobanish'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'nocopy'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'nomanuel'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'nowander'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'nowish'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'phylum'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'physicalResistance'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'poison'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'scaling'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'scalingCap'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'scalingFloor'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'skillBlockChance'; type: { kind: 'INPUT_OBJECT'; name: 'FloatFilter'; ofType: null; }; defaultValue: null }, { name: 'snake'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'spellBlockChance'; type: { kind: 'INPUT_OBJECT'; name: 'FloatFilter'; ofType: null; }; defaultValue: null }, { name: 'sprinkles'; type: { kind: 'INPUT_OBJECT'; name: 'StringListFilter'; ofType: null; }; defaultValue: null }, { name: 'superlikely'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'ultrarare'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'wanderer'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'wiki'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'wish'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'monsterDropsByMonster'; type: { kind: 'INPUT_OBJECT'; name: 'MonsterToManyMonsterDropFilter'; ofType: null; }; defaultValue: null }, { name: 'monsterDropsByMonsterExist'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MonsterFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MonsterFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'MonsterFilter'; ofType: null; }; defaultValue: null }]; };
    'MonsterInput': { kind: 'INPUT_OBJECT'; name: 'MonsterInput'; isOneOf: false; inputFields: [{ name: 'ambiguous'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'article'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'attack'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'boss'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'defence'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'drippy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'element'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MonsterElement'; ofType: null; }; }; defaultValue: null }, { name: 'elementalAttack'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MonsterElement'; ofType: null; }; }; defaultValue: null }, { name: 'elementalDefence'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MonsterElement'; ofType: null; }; }; defaultValue: null }, { name: 'elementalResistance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'experience'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'free'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'ghost'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'groupSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'hp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'image'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'initiative'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'itemBlockChance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; defaultValue: null }, { name: 'lucky'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'manuel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'meat'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'monsterLevelMultiplier'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'nobanish'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'nocopy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'nomanuel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'nowander'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'nowish'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'phylum'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'physicalResistance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'poison'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'scaling'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'scalingCap'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'scalingFloor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'skillBlockChance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; defaultValue: null }, { name: 'snake'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'spellBlockChance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; defaultValue: null }, { name: 'sprinkles'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'superlikely'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'ultrarare'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'wanderer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'wiki'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'wish'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }]; };
    'MonsterPatch': { kind: 'INPUT_OBJECT'; name: 'MonsterPatch'; isOneOf: false; inputFields: [{ name: 'ambiguous'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'article'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'attack'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'boss'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'defence'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'drippy'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'element'; type: { kind: 'ENUM'; name: 'MonsterElement'; ofType: null; }; defaultValue: null }, { name: 'elementalAttack'; type: { kind: 'ENUM'; name: 'MonsterElement'; ofType: null; }; defaultValue: null }, { name: 'elementalDefence'; type: { kind: 'ENUM'; name: 'MonsterElement'; ofType: null; }; defaultValue: null }, { name: 'elementalResistance'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'experience'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'free'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'ghost'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'groupSize'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'hp'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'initiative'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'itemBlockChance'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'lucky'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'manuel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'meat'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'monsterLevelMultiplier'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nobanish'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'nocopy'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'nomanuel'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'nowander'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'nowish'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'phylum'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'physicalResistance'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'poison'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'scaling'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'scalingCap'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'scalingFloor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'skillBlockChance'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'snake'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'spellBlockChance'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'sprinkles'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'superlikely'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'ultrarare'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'wanderer'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'wiki'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'wish'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'MonsterToManyMonsterDropFilter': { kind: 'INPUT_OBJECT'; name: 'MonsterToManyMonsterDropFilter'; isOneOf: false; inputFields: [{ name: 'every'; type: { kind: 'INPUT_OBJECT'; name: 'MonsterDropFilter'; ofType: null; }; defaultValue: null }, { name: 'some'; type: { kind: 'INPUT_OBJECT'; name: 'MonsterDropFilter'; ofType: null; }; defaultValue: null }, { name: 'none'; type: { kind: 'INPUT_OBJECT'; name: 'MonsterDropFilter'; ofType: null; }; defaultValue: null }]; };
    'MonstersConnection': { kind: 'OBJECT'; name: 'MonstersConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MonstersEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Monster'; ofType: null; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'MonstersEdge': { kind: 'OBJECT'; name: 'MonstersEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Monster'; ofType: null; } }; }; };
    'MonstersOrderBy': { name: 'MonstersOrderBy'; enumValues: 'NATURAL' | 'AMBIGUOUS_ASC' | 'AMBIGUOUS_DESC' | 'ARTICLE_ASC' | 'ARTICLE_DESC' | 'ATTACK_ASC' | 'ATTACK_DESC' | 'BOSS_ASC' | 'BOSS_DESC' | 'DEFENCE_ASC' | 'DEFENCE_DESC' | 'DRIPPY_ASC' | 'DRIPPY_DESC' | 'ELEMENT_ASC' | 'ELEMENT_DESC' | 'ELEMENTAL_ATTACK_ASC' | 'ELEMENTAL_ATTACK_DESC' | 'ELEMENTAL_DEFENCE_ASC' | 'ELEMENTAL_DEFENCE_DESC' | 'ELEMENTAL_RESISTANCE_ASC' | 'ELEMENTAL_RESISTANCE_DESC' | 'EXPERIENCE_ASC' | 'EXPERIENCE_DESC' | 'FREE_ASC' | 'FREE_DESC' | 'GHOST_ASC' | 'GHOST_DESC' | 'GROUP_SIZE_ASC' | 'GROUP_SIZE_DESC' | 'HP_ASC' | 'HP_DESC' | 'ID_ASC' | 'ID_DESC' | 'IMAGE_ASC' | 'IMAGE_DESC' | 'INITIATIVE_ASC' | 'INITIATIVE_DESC' | 'ITEM_BLOCK_CHANCE_ASC' | 'ITEM_BLOCK_CHANCE_DESC' | 'LUCKY_ASC' | 'LUCKY_DESC' | 'MANUEL_ASC' | 'MANUEL_DESC' | 'MEAT_ASC' | 'MEAT_DESC' | 'MONSTER_LEVEL_MULTIPLIER_ASC' | 'MONSTER_LEVEL_MULTIPLIER_DESC' | 'NAME_ASC' | 'NAME_DESC' | 'NOBANISH_ASC' | 'NOBANISH_DESC' | 'NOCOPY_ASC' | 'NOCOPY_DESC' | 'NOMANUEL_ASC' | 'NOMANUEL_DESC' | 'NOWANDER_ASC' | 'NOWANDER_DESC' | 'NOWISH_ASC' | 'NOWISH_DESC' | 'PHYLUM_ASC' | 'PHYLUM_DESC' | 'PHYSICAL_RESISTANCE_ASC' | 'PHYSICAL_RESISTANCE_DESC' | 'POISON_ASC' | 'POISON_DESC' | 'SCALING_ASC' | 'SCALING_DESC' | 'SCALING_CAP_ASC' | 'SCALING_CAP_DESC' | 'SCALING_FLOOR_ASC' | 'SCALING_FLOOR_DESC' | 'SKILL_BLOCK_CHANCE_ASC' | 'SKILL_BLOCK_CHANCE_DESC' | 'SNAKE_ASC' | 'SNAKE_DESC' | 'SPELL_BLOCK_CHANCE_ASC' | 'SPELL_BLOCK_CHANCE_DESC' | 'SPRINKLES_ASC' | 'SPRINKLES_DESC' | 'SUPERLIKELY_ASC' | 'SUPERLIKELY_DESC' | 'ULTRARARE_ASC' | 'ULTRARARE_DESC' | 'WANDERER_ASC' | 'WANDERER_DESC' | 'WIKI_ASC' | 'WIKI_DESC' | 'WISH_ASC' | 'WISH_DESC' | 'PRIMARY_KEY_ASC' | 'PRIMARY_KEY_DESC'; };
    'Mutation': { kind: 'OBJECT'; name: 'Mutation'; fields: { 'createClass': { name: 'createClass'; type: { kind: 'OBJECT'; name: 'CreateClassPayload'; ofType: null; } }; 'createEffect': { name: 'createEffect'; type: { kind: 'OBJECT'; name: 'CreateEffectPayload'; ofType: null; } }; 'createEquipment': { name: 'createEquipment'; type: { kind: 'OBJECT'; name: 'CreateEquipmentPayload'; ofType: null; } }; 'createFamiliar': { name: 'createFamiliar'; type: { kind: 'OBJECT'; name: 'CreateFamiliarPayload'; ofType: null; } }; 'createFoldGroup': { name: 'createFoldGroup'; type: { kind: 'OBJECT'; name: 'CreateFoldGroupPayload'; ofType: null; } }; 'createFoldable': { name: 'createFoldable'; type: { kind: 'OBJECT'; name: 'CreateFoldablePayload'; ofType: null; } }; 'createItem': { name: 'createItem'; type: { kind: 'OBJECT'; name: 'CreateItemPayload'; ofType: null; } }; 'createLocation': { name: 'createLocation'; type: { kind: 'OBJECT'; name: 'CreateLocationPayload'; ofType: null; } }; 'createMeta': { name: 'createMeta'; type: { kind: 'OBJECT'; name: 'CreateMetaPayload'; ofType: null; } }; 'createMonster': { name: 'createMonster'; type: { kind: 'OBJECT'; name: 'CreateMonsterPayload'; ofType: null; } }; 'createMonsterDrop': { name: 'createMonsterDrop'; type: { kind: 'OBJECT'; name: 'CreateMonsterDropPayload'; ofType: null; } }; 'createOutfit': { name: 'createOutfit'; type: { kind: 'OBJECT'; name: 'CreateOutfitPayload'; ofType: null; } }; 'createOutfitEquipment': { name: 'createOutfitEquipment'; type: { kind: 'OBJECT'; name: 'CreateOutfitEquipmentPayload'; ofType: null; } }; 'createOutfitTreat': { name: 'createOutfitTreat'; type: { kind: 'OBJECT'; name: 'CreateOutfitTreatPayload'; ofType: null; } }; 'createPath': { name: 'createPath'; type: { kind: 'OBJECT'; name: 'CreatePathPayload'; ofType: null; } }; 'createSkill': { name: 'createSkill'; type: { kind: 'OBJECT'; name: 'CreateSkillPayload'; ofType: null; } }; 'deleteClass': { name: 'deleteClass'; type: { kind: 'OBJECT'; name: 'DeleteClassPayload'; ofType: null; } }; 'deleteClassById': { name: 'deleteClassById'; type: { kind: 'OBJECT'; name: 'DeleteClassPayload'; ofType: null; } }; 'deleteEffect': { name: 'deleteEffect'; type: { kind: 'OBJECT'; name: 'DeleteEffectPayload'; ofType: null; } }; 'deleteEffectByDescid': { name: 'deleteEffectByDescid'; type: { kind: 'OBJECT'; name: 'DeleteEffectPayload'; ofType: null; } }; 'deleteEffectById': { name: 'deleteEffectById'; type: { kind: 'OBJECT'; name: 'DeleteEffectPayload'; ofType: null; } }; 'deleteEquipment': { name: 'deleteEquipment'; type: { kind: 'OBJECT'; name: 'DeleteEquipmentPayload'; ofType: null; } }; 'deleteEquipmentById': { name: 'deleteEquipmentById'; type: { kind: 'OBJECT'; name: 'DeleteEquipmentPayload'; ofType: null; } }; 'deleteFamiliar': { name: 'deleteFamiliar'; type: { kind: 'OBJECT'; name: 'DeleteFamiliarPayload'; ofType: null; } }; 'deleteFamiliarById': { name: 'deleteFamiliarById'; type: { kind: 'OBJECT'; name: 'DeleteFamiliarPayload'; ofType: null; } }; 'deleteFoldGroup': { name: 'deleteFoldGroup'; type: { kind: 'OBJECT'; name: 'DeleteFoldGroupPayload'; ofType: null; } }; 'deleteFoldGroupById': { name: 'deleteFoldGroupById'; type: { kind: 'OBJECT'; name: 'DeleteFoldGroupPayload'; ofType: null; } }; 'deleteItem': { name: 'deleteItem'; type: { kind: 'OBJECT'; name: 'DeleteItemPayload'; ofType: null; } }; 'deleteItemByDescid': { name: 'deleteItemByDescid'; type: { kind: 'OBJECT'; name: 'DeleteItemPayload'; ofType: null; } }; 'deleteItemById': { name: 'deleteItemById'; type: { kind: 'OBJECT'; name: 'DeleteItemPayload'; ofType: null; } }; 'deleteLocation': { name: 'deleteLocation'; type: { kind: 'OBJECT'; name: 'DeleteLocationPayload'; ofType: null; } }; 'deleteLocationByName': { name: 'deleteLocationByName'; type: { kind: 'OBJECT'; name: 'DeleteLocationPayload'; ofType: null; } }; 'deleteMonster': { name: 'deleteMonster'; type: { kind: 'OBJECT'; name: 'DeleteMonsterPayload'; ofType: null; } }; 'deleteMonsterById': { name: 'deleteMonsterById'; type: { kind: 'OBJECT'; name: 'DeleteMonsterPayload'; ofType: null; } }; 'deleteOutfit': { name: 'deleteOutfit'; type: { kind: 'OBJECT'; name: 'DeleteOutfitPayload'; ofType: null; } }; 'deleteOutfitById': { name: 'deleteOutfitById'; type: { kind: 'OBJECT'; name: 'DeleteOutfitPayload'; ofType: null; } }; 'deletePath': { name: 'deletePath'; type: { kind: 'OBJECT'; name: 'DeletePathPayload'; ofType: null; } }; 'deletePathById': { name: 'deletePathById'; type: { kind: 'OBJECT'; name: 'DeletePathPayload'; ofType: null; } }; 'deletePathByImage': { name: 'deletePathByImage'; type: { kind: 'OBJECT'; name: 'DeletePathPayload'; ofType: null; } }; 'deleteSkill': { name: 'deleteSkill'; type: { kind: 'OBJECT'; name: 'DeleteSkillPayload'; ofType: null; } }; 'deleteSkillById': { name: 'deleteSkillById'; type: { kind: 'OBJECT'; name: 'DeleteSkillPayload'; ofType: null; } }; 'updateClass': { name: 'updateClass'; type: { kind: 'OBJECT'; name: 'UpdateClassPayload'; ofType: null; } }; 'updateClassById': { name: 'updateClassById'; type: { kind: 'OBJECT'; name: 'UpdateClassPayload'; ofType: null; } }; 'updateEffect': { name: 'updateEffect'; type: { kind: 'OBJECT'; name: 'UpdateEffectPayload'; ofType: null; } }; 'updateEffectByDescid': { name: 'updateEffectByDescid'; type: { kind: 'OBJECT'; name: 'UpdateEffectPayload'; ofType: null; } }; 'updateEffectById': { name: 'updateEffectById'; type: { kind: 'OBJECT'; name: 'UpdateEffectPayload'; ofType: null; } }; 'updateEquipment': { name: 'updateEquipment'; type: { kind: 'OBJECT'; name: 'UpdateEquipmentPayload'; ofType: null; } }; 'updateEquipmentById': { name: 'updateEquipmentById'; type: { kind: 'OBJECT'; name: 'UpdateEquipmentPayload'; ofType: null; } }; 'updateFamiliar': { name: 'updateFamiliar'; type: { kind: 'OBJECT'; name: 'UpdateFamiliarPayload'; ofType: null; } }; 'updateFamiliarById': { name: 'updateFamiliarById'; type: { kind: 'OBJECT'; name: 'UpdateFamiliarPayload'; ofType: null; } }; 'updateFoldGroup': { name: 'updateFoldGroup'; type: { kind: 'OBJECT'; name: 'UpdateFoldGroupPayload'; ofType: null; } }; 'updateFoldGroupById': { name: 'updateFoldGroupById'; type: { kind: 'OBJECT'; name: 'UpdateFoldGroupPayload'; ofType: null; } }; 'updateItem': { name: 'updateItem'; type: { kind: 'OBJECT'; name: 'UpdateItemPayload'; ofType: null; } }; 'updateItemByDescid': { name: 'updateItemByDescid'; type: { kind: 'OBJECT'; name: 'UpdateItemPayload'; ofType: null; } }; 'updateItemById': { name: 'updateItemById'; type: { kind: 'OBJECT'; name: 'UpdateItemPayload'; ofType: null; } }; 'updateLocation': { name: 'updateLocation'; type: { kind: 'OBJECT'; name: 'UpdateLocationPayload'; ofType: null; } }; 'updateLocationByName': { name: 'updateLocationByName'; type: { kind: 'OBJECT'; name: 'UpdateLocationPayload'; ofType: null; } }; 'updateMonster': { name: 'updateMonster'; type: { kind: 'OBJECT'; name: 'UpdateMonsterPayload'; ofType: null; } }; 'updateMonsterById': { name: 'updateMonsterById'; type: { kind: 'OBJECT'; name: 'UpdateMonsterPayload'; ofType: null; } }; 'updateOutfit': { name: 'updateOutfit'; type: { kind: 'OBJECT'; name: 'UpdateOutfitPayload'; ofType: null; } }; 'updateOutfitById': { name: 'updateOutfitById'; type: { kind: 'OBJECT'; name: 'UpdateOutfitPayload'; ofType: null; } }; 'updatePath': { name: 'updatePath'; type: { kind: 'OBJECT'; name: 'UpdatePathPayload'; ofType: null; } }; 'updatePathById': { name: 'updatePathById'; type: { kind: 'OBJECT'; name: 'UpdatePathPayload'; ofType: null; } }; 'updatePathByImage': { name: 'updatePathByImage'; type: { kind: 'OBJECT'; name: 'UpdatePathPayload'; ofType: null; } }; 'updateSkill': { name: 'updateSkill'; type: { kind: 'OBJECT'; name: 'UpdateSkillPayload'; ofType: null; } }; 'updateSkillById': { name: 'updateSkillById'; type: { kind: 'OBJECT'; name: 'UpdateSkillPayload'; ofType: null; } }; }; };
    'Node': { kind: 'INTERFACE'; name: 'Node'; fields: { 'nodeId': { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; possibleTypes: 'Class' | 'Effect' | 'Equipment' | 'Familiar' | 'FoldGroup' | 'Item' | 'Location' | 'Monster' | 'Outfit' | 'Path' | 'Query' | 'Skill'; };
    'Outfit': { kind: 'OBJECT'; name: 'Outfit'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'nodeId': { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'outfitEquipmentsByOutfit': { name: 'outfitEquipmentsByOutfit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OutfitEquipmentsConnection'; ofType: null; }; } }; 'outfitTreatsByOutfit': { name: 'outfitTreatsByOutfit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OutfitTreatsConnection'; ofType: null; }; } }; }; };
    'OutfitCondition': { kind: 'INPUT_OBJECT'; name: 'OutfitCondition'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'OutfitEquipment': { kind: 'OBJECT'; name: 'OutfitEquipment'; fields: { 'equipment': { name: 'equipment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'itemByEquipment': { name: 'itemByEquipment'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; 'outfit': { name: 'outfit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'outfitByOutfit': { name: 'outfitByOutfit'; type: { kind: 'OBJECT'; name: 'Outfit'; ofType: null; } }; }; };
    'OutfitEquipmentCondition': { kind: 'INPUT_OBJECT'; name: 'OutfitEquipmentCondition'; isOneOf: false; inputFields: [{ name: 'outfit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'equipment'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'OutfitEquipmentFilter': { kind: 'INPUT_OBJECT'; name: 'OutfitEquipmentFilter'; isOneOf: false; inputFields: [{ name: 'outfit'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'equipment'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'outfitByOutfit'; type: { kind: 'INPUT_OBJECT'; name: 'OutfitFilter'; ofType: null; }; defaultValue: null }, { name: 'itemByEquipment'; type: { kind: 'INPUT_OBJECT'; name: 'ItemFilter'; ofType: null; }; defaultValue: null }, { name: 'and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OutfitEquipmentFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OutfitEquipmentFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'OutfitEquipmentFilter'; ofType: null; }; defaultValue: null }]; };
    'OutfitEquipmentInput': { kind: 'INPUT_OBJECT'; name: 'OutfitEquipmentInput'; isOneOf: false; inputFields: [{ name: 'outfit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'equipment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'OutfitEquipmentsConnection': { kind: 'OBJECT'; name: 'OutfitEquipmentsConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OutfitEquipmentsEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'OutfitEquipment'; ofType: null; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'OutfitEquipmentsEdge': { kind: 'OBJECT'; name: 'OutfitEquipmentsEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'OutfitEquipment'; ofType: null; } }; }; };
    'OutfitEquipmentsOrderBy': { name: 'OutfitEquipmentsOrderBy'; enumValues: 'NATURAL' | 'OUTFIT_ASC' | 'OUTFIT_DESC' | 'EQUIPMENT_ASC' | 'EQUIPMENT_DESC'; };
    'OutfitFilter': { kind: 'INPUT_OBJECT'; name: 'OutfitFilter'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'outfitEquipmentsByOutfit'; type: { kind: 'INPUT_OBJECT'; name: 'OutfitToManyOutfitEquipmentFilter'; ofType: null; }; defaultValue: null }, { name: 'outfitEquipmentsByOutfitExist'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'outfitTreatsByOutfit'; type: { kind: 'INPUT_OBJECT'; name: 'OutfitToManyOutfitTreatFilter'; ofType: null; }; defaultValue: null }, { name: 'outfitTreatsByOutfitExist'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OutfitFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OutfitFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'OutfitFilter'; ofType: null; }; defaultValue: null }]; };
    'OutfitInput': { kind: 'INPUT_OBJECT'; name: 'OutfitInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'image'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'OutfitPatch': { kind: 'INPUT_OBJECT'; name: 'OutfitPatch'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'OutfitToManyOutfitEquipmentFilter': { kind: 'INPUT_OBJECT'; name: 'OutfitToManyOutfitEquipmentFilter'; isOneOf: false; inputFields: [{ name: 'every'; type: { kind: 'INPUT_OBJECT'; name: 'OutfitEquipmentFilter'; ofType: null; }; defaultValue: null }, { name: 'some'; type: { kind: 'INPUT_OBJECT'; name: 'OutfitEquipmentFilter'; ofType: null; }; defaultValue: null }, { name: 'none'; type: { kind: 'INPUT_OBJECT'; name: 'OutfitEquipmentFilter'; ofType: null; }; defaultValue: null }]; };
    'OutfitToManyOutfitTreatFilter': { kind: 'INPUT_OBJECT'; name: 'OutfitToManyOutfitTreatFilter'; isOneOf: false; inputFields: [{ name: 'every'; type: { kind: 'INPUT_OBJECT'; name: 'OutfitTreatFilter'; ofType: null; }; defaultValue: null }, { name: 'some'; type: { kind: 'INPUT_OBJECT'; name: 'OutfitTreatFilter'; ofType: null; }; defaultValue: null }, { name: 'none'; type: { kind: 'INPUT_OBJECT'; name: 'OutfitTreatFilter'; ofType: null; }; defaultValue: null }]; };
    'OutfitTreat': { kind: 'OBJECT'; name: 'OutfitTreat'; fields: { 'chance': { name: 'chance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'item': { name: 'item'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'itemByItem': { name: 'itemByItem'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; 'outfit': { name: 'outfit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'outfitByOutfit': { name: 'outfitByOutfit'; type: { kind: 'OBJECT'; name: 'Outfit'; ofType: null; } }; }; };
    'OutfitTreatCondition': { kind: 'INPUT_OBJECT'; name: 'OutfitTreatCondition'; isOneOf: false; inputFields: [{ name: 'outfit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'item'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'chance'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }]; };
    'OutfitTreatFilter': { kind: 'INPUT_OBJECT'; name: 'OutfitTreatFilter'; isOneOf: false; inputFields: [{ name: 'outfit'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'item'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'chance'; type: { kind: 'INPUT_OBJECT'; name: 'FloatFilter'; ofType: null; }; defaultValue: null }, { name: 'outfitByOutfit'; type: { kind: 'INPUT_OBJECT'; name: 'OutfitFilter'; ofType: null; }; defaultValue: null }, { name: 'outfitByOutfitExists'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'itemByItem'; type: { kind: 'INPUT_OBJECT'; name: 'ItemFilter'; ofType: null; }; defaultValue: null }, { name: 'itemByItemExists'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OutfitTreatFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OutfitTreatFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'OutfitTreatFilter'; ofType: null; }; defaultValue: null }]; };
    'OutfitTreatInput': { kind: 'INPUT_OBJECT'; name: 'OutfitTreatInput'; isOneOf: false; inputFields: [{ name: 'outfit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'item'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'chance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; defaultValue: null }]; };
    'OutfitTreatsConnection': { kind: 'OBJECT'; name: 'OutfitTreatsConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OutfitTreatsEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'OutfitTreat'; ofType: null; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'OutfitTreatsEdge': { kind: 'OBJECT'; name: 'OutfitTreatsEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'OutfitTreat'; ofType: null; } }; }; };
    'OutfitTreatsOrderBy': { name: 'OutfitTreatsOrderBy'; enumValues: 'NATURAL' | 'OUTFIT_ASC' | 'OUTFIT_DESC' | 'ITEM_ASC' | 'ITEM_DESC' | 'CHANCE_ASC' | 'CHANCE_DESC'; };
    'OutfitsConnection': { kind: 'OBJECT'; name: 'OutfitsConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OutfitsEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Outfit'; ofType: null; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'OutfitsEdge': { kind: 'OBJECT'; name: 'OutfitsEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Outfit'; ofType: null; } }; }; };
    'OutfitsOrderBy': { name: 'OutfitsOrderBy'; enumValues: 'NATURAL' | 'ID_ASC' | 'ID_DESC' | 'NAME_ASC' | 'NAME_DESC' | 'IMAGE_ASC' | 'IMAGE_DESC' | 'PRIMARY_KEY_ASC' | 'PRIMARY_KEY_DESC'; };
    'PageInfo': { kind: 'OBJECT'; name: 'PageInfo'; fields: { 'endCursor': { name: 'endCursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; } }; 'hasNextPage': { name: 'hasNextPage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasPreviousPage': { name: 'hasPreviousPage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'startCursor': { name: 'startCursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; } }; }; };
    'Path': { kind: 'OBJECT'; name: 'Path'; fields: { 'article': { name: 'article'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'bucket': { name: 'bucket'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'classesByPath': { name: 'classesByPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ClassesConnection'; ofType: null; }; } }; 'enumName': { name: 'enumName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'isAvatar': { name: 'isAvatar'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'liverCapacity': { name: 'liverCapacity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'maximumPoints': { name: 'maximumPoints'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'nodeId': { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'pointsPreference': { name: 'pointsPreference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'spleenCapacity': { name: 'spleenCapacity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'stomachCapacity': { name: 'stomachCapacity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'PathCondition': { kind: 'INPUT_OBJECT'; name: 'PathCondition'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'enumName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'isAvatar'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'article'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'pointsPreference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'maximumPoints'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'bucket'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'stomachCapacity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'liverCapacity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'spleenCapacity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'PathFilter': { kind: 'INPUT_OBJECT'; name: 'PathFilter'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'enumName'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'isAvatar'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'article'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'pointsPreference'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'maximumPoints'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'bucket'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'stomachCapacity'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'liverCapacity'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'spleenCapacity'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'classesByPath'; type: { kind: 'INPUT_OBJECT'; name: 'PathToManyClassFilter'; ofType: null; }; defaultValue: null }, { name: 'classesByPathExist'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PathFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PathFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'PathFilter'; ofType: null; }; defaultValue: null }]; };
    'PathInput': { kind: 'INPUT_OBJECT'; name: 'PathInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'enumName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'isAvatar'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'article'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'pointsPreference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'maximumPoints'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'bucket'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'stomachCapacity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'liverCapacity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'spleenCapacity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'PathPatch': { kind: 'INPUT_OBJECT'; name: 'PathPatch'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'enumName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'isAvatar'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'article'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'pointsPreference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'maximumPoints'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'bucket'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'stomachCapacity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'liverCapacity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'spleenCapacity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'PathToManyClassFilter': { kind: 'INPUT_OBJECT'; name: 'PathToManyClassFilter'; isOneOf: false; inputFields: [{ name: 'every'; type: { kind: 'INPUT_OBJECT'; name: 'ClassFilter'; ofType: null; }; defaultValue: null }, { name: 'some'; type: { kind: 'INPUT_OBJECT'; name: 'ClassFilter'; ofType: null; }; defaultValue: null }, { name: 'none'; type: { kind: 'INPUT_OBJECT'; name: 'ClassFilter'; ofType: null; }; defaultValue: null }]; };
    'PathsConnection': { kind: 'OBJECT'; name: 'PathsConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PathsEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Path'; ofType: null; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'PathsEdge': { kind: 'OBJECT'; name: 'PathsEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Path'; ofType: null; } }; }; };
    'PathsOrderBy': { name: 'PathsOrderBy'; enumValues: 'NATURAL' | 'ID_ASC' | 'ID_DESC' | 'NAME_ASC' | 'NAME_DESC' | 'ENUM_NAME_ASC' | 'ENUM_NAME_DESC' | 'IMAGE_ASC' | 'IMAGE_DESC' | 'IS_AVATAR_ASC' | 'IS_AVATAR_DESC' | 'ARTICLE_ASC' | 'ARTICLE_DESC' | 'POINTS_PREFERENCE_ASC' | 'POINTS_PREFERENCE_DESC' | 'MAXIMUM_POINTS_ASC' | 'MAXIMUM_POINTS_DESC' | 'BUCKET_ASC' | 'BUCKET_DESC' | 'STOMACH_CAPACITY_ASC' | 'STOMACH_CAPACITY_DESC' | 'LIVER_CAPACITY_ASC' | 'LIVER_CAPACITY_DESC' | 'SPLEEN_CAPACITY_ASC' | 'SPLEEN_CAPACITY_DESC' | 'PRIMARY_KEY_ASC' | 'PRIMARY_KEY_DESC'; };
    'Query': { kind: 'OBJECT'; name: 'Query'; fields: { 'allClasses': { name: 'allClasses'; type: { kind: 'OBJECT'; name: 'ClassesConnection'; ofType: null; } }; 'allEffects': { name: 'allEffects'; type: { kind: 'OBJECT'; name: 'EffectsConnection'; ofType: null; } }; 'allEquipment': { name: 'allEquipment'; type: { kind: 'OBJECT'; name: 'EquipmentConnection'; ofType: null; } }; 'allFamiliars': { name: 'allFamiliars'; type: { kind: 'OBJECT'; name: 'FamiliarsConnection'; ofType: null; } }; 'allFoldGroups': { name: 'allFoldGroups'; type: { kind: 'OBJECT'; name: 'FoldGroupsConnection'; ofType: null; } }; 'allFoldables': { name: 'allFoldables'; type: { kind: 'OBJECT'; name: 'FoldablesConnection'; ofType: null; } }; 'allItems': { name: 'allItems'; type: { kind: 'OBJECT'; name: 'ItemsConnection'; ofType: null; } }; 'allLocations': { name: 'allLocations'; type: { kind: 'OBJECT'; name: 'LocationsConnection'; ofType: null; } }; 'allMetas': { name: 'allMetas'; type: { kind: 'OBJECT'; name: 'MetasConnection'; ofType: null; } }; 'allMonsterDrops': { name: 'allMonsterDrops'; type: { kind: 'OBJECT'; name: 'MonsterDropsConnection'; ofType: null; } }; 'allMonsters': { name: 'allMonsters'; type: { kind: 'OBJECT'; name: 'MonstersConnection'; ofType: null; } }; 'allOutfitEquipments': { name: 'allOutfitEquipments'; type: { kind: 'OBJECT'; name: 'OutfitEquipmentsConnection'; ofType: null; } }; 'allOutfitTreats': { name: 'allOutfitTreats'; type: { kind: 'OBJECT'; name: 'OutfitTreatsConnection'; ofType: null; } }; 'allOutfits': { name: 'allOutfits'; type: { kind: 'OBJECT'; name: 'OutfitsConnection'; ofType: null; } }; 'allPaths': { name: 'allPaths'; type: { kind: 'OBJECT'; name: 'PathsConnection'; ofType: null; } }; 'allSkills': { name: 'allSkills'; type: { kind: 'OBJECT'; name: 'SkillsConnection'; ofType: null; } }; 'class': { name: 'class'; type: { kind: 'OBJECT'; name: 'Class'; ofType: null; } }; 'classById': { name: 'classById'; type: { kind: 'OBJECT'; name: 'Class'; ofType: null; } }; 'effect': { name: 'effect'; type: { kind: 'OBJECT'; name: 'Effect'; ofType: null; } }; 'effectByDescid': { name: 'effectByDescid'; type: { kind: 'OBJECT'; name: 'Effect'; ofType: null; } }; 'effectById': { name: 'effectById'; type: { kind: 'OBJECT'; name: 'Effect'; ofType: null; } }; 'equipment': { name: 'equipment'; type: { kind: 'OBJECT'; name: 'Equipment'; ofType: null; } }; 'equipmentById': { name: 'equipmentById'; type: { kind: 'OBJECT'; name: 'Equipment'; ofType: null; } }; 'familiar': { name: 'familiar'; type: { kind: 'OBJECT'; name: 'Familiar'; ofType: null; } }; 'familiarById': { name: 'familiarById'; type: { kind: 'OBJECT'; name: 'Familiar'; ofType: null; } }; 'foldGroup': { name: 'foldGroup'; type: { kind: 'OBJECT'; name: 'FoldGroup'; ofType: null; } }; 'foldGroupById': { name: 'foldGroupById'; type: { kind: 'OBJECT'; name: 'FoldGroup'; ofType: null; } }; 'item': { name: 'item'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; 'itemByDescid': { name: 'itemByDescid'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; 'itemById': { name: 'itemById'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; 'location': { name: 'location'; type: { kind: 'OBJECT'; name: 'Location'; ofType: null; } }; 'locationByName': { name: 'locationByName'; type: { kind: 'OBJECT'; name: 'Location'; ofType: null; } }; 'monster': { name: 'monster'; type: { kind: 'OBJECT'; name: 'Monster'; ofType: null; } }; 'monsterById': { name: 'monsterById'; type: { kind: 'OBJECT'; name: 'Monster'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'INTERFACE'; name: 'Node'; ofType: null; } }; 'nodeId': { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'outfit': { name: 'outfit'; type: { kind: 'OBJECT'; name: 'Outfit'; ofType: null; } }; 'outfitById': { name: 'outfitById'; type: { kind: 'OBJECT'; name: 'Outfit'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'OBJECT'; name: 'Path'; ofType: null; } }; 'pathById': { name: 'pathById'; type: { kind: 'OBJECT'; name: 'Path'; ofType: null; } }; 'pathByImage': { name: 'pathByImage'; type: { kind: 'OBJECT'; name: 'Path'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Query'; ofType: null; }; } }; 'skill': { name: 'skill'; type: { kind: 'OBJECT'; name: 'Skill'; ofType: null; } }; 'skillById': { name: 'skillById'; type: { kind: 'OBJECT'; name: 'Skill'; ofType: null; } }; }; };
    'Skill': { kind: 'OBJECT'; name: 'Skill'; fields: { 'ambiguous': { name: 'ambiguous'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'duration': { name: 'duration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'guildLevel': { name: 'guildLevel'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'maxLevel': { name: 'maxLevel'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'mpCost': { name: 'mpCost'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'nodeId': { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'permable': { name: 'permable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'tags': { name: 'tags'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'SkillTag'; ofType: null; }; }; } }; }; };
    'SkillCondition': { kind: 'INPUT_OBJECT'; name: 'SkillCondition'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'SkillTag'; ofType: null; }; }; defaultValue: null }, { name: 'mpCost'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'duration'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'guildLevel'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'maxLevel'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'permable'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'ambiguous'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'SkillFilter': { kind: 'INPUT_OBJECT'; name: 'SkillFilter'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'tags'; type: { kind: 'INPUT_OBJECT'; name: 'SkillTagListFilter'; ofType: null; }; defaultValue: null }, { name: 'mpCost'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'duration'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'guildLevel'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'maxLevel'; type: { kind: 'INPUT_OBJECT'; name: 'IntFilter'; ofType: null; }; defaultValue: null }, { name: 'permable'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'ambiguous'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SkillFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SkillFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'SkillFilter'; ofType: null; }; defaultValue: null }]; };
    'SkillInput': { kind: 'INPUT_OBJECT'; name: 'SkillInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'image'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'tags'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'SkillTag'; ofType: null; }; }; }; defaultValue: null }, { name: 'mpCost'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'duration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'guildLevel'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'maxLevel'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'permable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'ambiguous'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'SkillPatch': { kind: 'INPUT_OBJECT'; name: 'SkillPatch'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'SkillTag'; ofType: null; }; }; defaultValue: null }, { name: 'mpCost'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'duration'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'guildLevel'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'maxLevel'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'permable'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'ambiguous'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'SkillTag': { name: 'SkillTag'; enumValues: 'COMBAT' | 'EFFECT' | 'EXPRESSION' | 'HEAL' | 'ITEM' | 'NC' | 'OTHER' | 'PASSIVE' | 'SELF' | 'SONG' | 'WALK'; };
    'SkillTagListFilter': { kind: 'INPUT_OBJECT'; name: 'SkillTagListFilter'; isOneOf: false; inputFields: [{ name: 'isNull'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'equalTo'; type: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'SkillTag'; ofType: null; }; }; defaultValue: null }, { name: 'notEqualTo'; type: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'SkillTag'; ofType: null; }; }; defaultValue: null }, { name: 'lessThan'; type: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'SkillTag'; ofType: null; }; }; defaultValue: null }, { name: 'lessThanOrEqualTo'; type: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'SkillTag'; ofType: null; }; }; defaultValue: null }, { name: 'greaterThan'; type: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'SkillTag'; ofType: null; }; }; defaultValue: null }, { name: 'greaterThanOrEqualTo'; type: { kind: 'LIST'; name: never; ofType: { kind: 'ENUM'; name: 'SkillTag'; ofType: null; }; }; defaultValue: null }, { name: 'anyEqualTo'; type: { kind: 'ENUM'; name: 'SkillTag'; ofType: null; }; defaultValue: null }, { name: 'anyNotEqualTo'; type: { kind: 'ENUM'; name: 'SkillTag'; ofType: null; }; defaultValue: null }]; };
    'SkillsConnection': { kind: 'OBJECT'; name: 'SkillsConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SkillsEdge'; ofType: null; }; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Skill'; ofType: null; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'SkillsEdge': { kind: 'OBJECT'; name: 'SkillsEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Skill'; ofType: null; } }; }; };
    'SkillsOrderBy': { name: 'SkillsOrderBy'; enumValues: 'NATURAL' | 'ID_ASC' | 'ID_DESC' | 'NAME_ASC' | 'NAME_DESC' | 'IMAGE_ASC' | 'IMAGE_DESC' | 'TAGS_ASC' | 'TAGS_DESC' | 'MP_COST_ASC' | 'MP_COST_DESC' | 'DURATION_ASC' | 'DURATION_DESC' | 'GUILD_LEVEL_ASC' | 'GUILD_LEVEL_DESC' | 'MAX_LEVEL_ASC' | 'MAX_LEVEL_DESC' | 'PERMABLE_ASC' | 'PERMABLE_DESC' | 'AMBIGUOUS_ASC' | 'AMBIGUOUS_DESC' | 'PRIMARY_KEY_ASC' | 'PRIMARY_KEY_DESC'; };
    'String': unknown;
    'StringFilter': { kind: 'INPUT_OBJECT'; name: 'StringFilter'; isOneOf: false; inputFields: [{ name: 'isNull'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'equalTo'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'notEqualTo'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'notIn'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'lessThan'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'lessThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'greaterThan'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'greaterThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'StringListFilter': { kind: 'INPUT_OBJECT'; name: 'StringListFilter'; isOneOf: false; inputFields: [{ name: 'isNull'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'equalTo'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'notEqualTo'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'lessThan'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'lessThanOrEqualTo'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'greaterThan'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'greaterThanOrEqualTo'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'anyEqualTo'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'anyNotEqualTo'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'UpdateClassByIdInput': { kind: 'INPUT_OBJECT'; name: 'UpdateClassByIdInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'classPatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ClassPatch'; ofType: null; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateClassInput': { kind: 'INPUT_OBJECT'; name: 'UpdateClassInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'classPatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ClassPatch'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateClassPayload': { kind: 'OBJECT'; name: 'UpdateClassPayload'; fields: { 'class': { name: 'class'; type: { kind: 'OBJECT'; name: 'Class'; ofType: null; } }; 'classEdge': { name: 'classEdge'; type: { kind: 'OBJECT'; name: 'ClassesEdge'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'pathByPath': { name: 'pathByPath'; type: { kind: 'OBJECT'; name: 'Path'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'UpdateEffectByDescidInput': { kind: 'INPUT_OBJECT'; name: 'UpdateEffectByDescidInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'effectPatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'EffectPatch'; ofType: null; }; }; defaultValue: null }, { name: 'descid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateEffectByIdInput': { kind: 'INPUT_OBJECT'; name: 'UpdateEffectByIdInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'effectPatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'EffectPatch'; ofType: null; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateEffectInput': { kind: 'INPUT_OBJECT'; name: 'UpdateEffectInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'effectPatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'EffectPatch'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateEffectPayload': { kind: 'OBJECT'; name: 'UpdateEffectPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'effect': { name: 'effect'; type: { kind: 'OBJECT'; name: 'Effect'; ofType: null; } }; 'effectEdge': { name: 'effectEdge'; type: { kind: 'OBJECT'; name: 'EffectsEdge'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'UpdateEquipmentByIdInput': { kind: 'INPUT_OBJECT'; name: 'UpdateEquipmentByIdInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'equipmentPatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'EquipmentPatch'; ofType: null; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateEquipmentInput': { kind: 'INPUT_OBJECT'; name: 'UpdateEquipmentInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'equipmentPatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'EquipmentPatch'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateEquipmentPayload': { kind: 'OBJECT'; name: 'UpdateEquipmentPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'equipment': { name: 'equipment'; type: { kind: 'OBJECT'; name: 'Equipment'; ofType: null; } }; 'equipmentEdge': { name: 'equipmentEdge'; type: { kind: 'OBJECT'; name: 'EquipmentEdge'; ofType: null; } }; 'itemByItem': { name: 'itemByItem'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'UpdateFamiliarByIdInput': { kind: 'INPUT_OBJECT'; name: 'UpdateFamiliarByIdInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'familiarPatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'FamiliarPatch'; ofType: null; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateFamiliarInput': { kind: 'INPUT_OBJECT'; name: 'UpdateFamiliarInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'familiarPatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'FamiliarPatch'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateFamiliarPayload': { kind: 'OBJECT'; name: 'UpdateFamiliarPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'familiar': { name: 'familiar'; type: { kind: 'OBJECT'; name: 'Familiar'; ofType: null; } }; 'familiarEdge': { name: 'familiarEdge'; type: { kind: 'OBJECT'; name: 'FamiliarsEdge'; ofType: null; } }; 'itemByEquipment': { name: 'itemByEquipment'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; 'itemByLarva': { name: 'itemByLarva'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'UpdateFoldGroupByIdInput': { kind: 'INPUT_OBJECT'; name: 'UpdateFoldGroupByIdInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'foldGroupPatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'FoldGroupPatch'; ofType: null; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateFoldGroupInput': { kind: 'INPUT_OBJECT'; name: 'UpdateFoldGroupInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'foldGroupPatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'FoldGroupPatch'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateFoldGroupPayload': { kind: 'OBJECT'; name: 'UpdateFoldGroupPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'foldGroup': { name: 'foldGroup'; type: { kind: 'OBJECT'; name: 'FoldGroup'; ofType: null; } }; 'foldGroupEdge': { name: 'foldGroupEdge'; type: { kind: 'OBJECT'; name: 'FoldGroupsEdge'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'UpdateItemByDescidInput': { kind: 'INPUT_OBJECT'; name: 'UpdateItemByDescidInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'itemPatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ItemPatch'; ofType: null; }; }; defaultValue: null }, { name: 'descid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateItemByIdInput': { kind: 'INPUT_OBJECT'; name: 'UpdateItemByIdInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'itemPatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ItemPatch'; ofType: null; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateItemInput': { kind: 'INPUT_OBJECT'; name: 'UpdateItemInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'itemPatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ItemPatch'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateItemPayload': { kind: 'OBJECT'; name: 'UpdateItemPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'item': { name: 'item'; type: { kind: 'OBJECT'; name: 'Item'; ofType: null; } }; 'itemEdge': { name: 'itemEdge'; type: { kind: 'OBJECT'; name: 'ItemsEdge'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'UpdateLocationByNameInput': { kind: 'INPUT_OBJECT'; name: 'UpdateLocationByNameInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'locationPatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'LocationPatch'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateLocationInput': { kind: 'INPUT_OBJECT'; name: 'UpdateLocationInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'locationPatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'LocationPatch'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateLocationPayload': { kind: 'OBJECT'; name: 'UpdateLocationPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'location': { name: 'location'; type: { kind: 'OBJECT'; name: 'Location'; ofType: null; } }; 'locationEdge': { name: 'locationEdge'; type: { kind: 'OBJECT'; name: 'LocationsEdge'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'UpdateMonsterByIdInput': { kind: 'INPUT_OBJECT'; name: 'UpdateMonsterByIdInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'monsterPatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MonsterPatch'; ofType: null; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateMonsterInput': { kind: 'INPUT_OBJECT'; name: 'UpdateMonsterInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'monsterPatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MonsterPatch'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateMonsterPayload': { kind: 'OBJECT'; name: 'UpdateMonsterPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'monster': { name: 'monster'; type: { kind: 'OBJECT'; name: 'Monster'; ofType: null; } }; 'monsterEdge': { name: 'monsterEdge'; type: { kind: 'OBJECT'; name: 'MonstersEdge'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'UpdateOutfitByIdInput': { kind: 'INPUT_OBJECT'; name: 'UpdateOutfitByIdInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'outfitPatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OutfitPatch'; ofType: null; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateOutfitInput': { kind: 'INPUT_OBJECT'; name: 'UpdateOutfitInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'outfitPatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OutfitPatch'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateOutfitPayload': { kind: 'OBJECT'; name: 'UpdateOutfitPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'outfit': { name: 'outfit'; type: { kind: 'OBJECT'; name: 'Outfit'; ofType: null; } }; 'outfitEdge': { name: 'outfitEdge'; type: { kind: 'OBJECT'; name: 'OutfitsEdge'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'UpdatePathByIdInput': { kind: 'INPUT_OBJECT'; name: 'UpdatePathByIdInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'pathPatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PathPatch'; ofType: null; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'UpdatePathByImageInput': { kind: 'INPUT_OBJECT'; name: 'UpdatePathByImageInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'pathPatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PathPatch'; ofType: null; }; }; defaultValue: null }, { name: 'image'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'UpdatePathInput': { kind: 'INPUT_OBJECT'; name: 'UpdatePathInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'pathPatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PathPatch'; ofType: null; }; }; defaultValue: null }]; };
    'UpdatePathPayload': { kind: 'OBJECT'; name: 'UpdatePathPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'OBJECT'; name: 'Path'; ofType: null; } }; 'pathEdge': { name: 'pathEdge'; type: { kind: 'OBJECT'; name: 'PathsEdge'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'UpdateSkillByIdInput': { kind: 'INPUT_OBJECT'; name: 'UpdateSkillByIdInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'skillPatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SkillPatch'; ofType: null; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateSkillInput': { kind: 'INPUT_OBJECT'; name: 'UpdateSkillInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'skillPatch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SkillPatch'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateSkillPayload': { kind: 'OBJECT'; name: 'UpdateSkillPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; 'skill': { name: 'skill'; type: { kind: 'OBJECT'; name: 'Skill'; ofType: null; } }; 'skillEdge': { name: 'skillEdge'; type: { kind: 'OBJECT'; name: 'SkillsEdge'; ofType: null; } }; }; };
};

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  name: never;
  query: 'Query';
  mutation: 'Mutation';
  subscription: never;
  types: introspection_types;
};

import * as gqlTada from 'gql.tada';

declare module 'gql.tada' {
  interface setupSchema {
    introspection: introspection
  }
}